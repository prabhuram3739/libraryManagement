{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/LibraryMangementSystem/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/MAMP/htdocs/LibraryMangementSystem/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nexport var Subscription = /*#__PURE__*/function () {\n  function Subscription(unsubscribe) {\n    _classCallCheck(this, Subscription);\n\n    this.closed = false;\n    this._parent = null;\n    this._parents = null;\n    this._subscriptions = null;\n\n    if (unsubscribe) {\n      this._unsubscribe = unsubscribe;\n    }\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      var hasErrors = false;\n      var errors;\n\n      if (this.closed) {\n        return;\n      }\n\n      var _parent = this._parent,\n          _parents = this._parents,\n          _unsubscribe = this._unsubscribe,\n          _subscriptions = this._subscriptions;\n      this.closed = true;\n      this._parent = null;\n      this._parents = null;\n      this._subscriptions = null;\n      var index = -1;\n      var len = _parents ? _parents.length : 0;\n\n      while (_parent) {\n        _parent.remove(this);\n\n        _parent = ++index < len && _parents[index] || null;\n      }\n\n      if (isFunction(_unsubscribe)) {\n        var trial = tryCatch(_unsubscribe).call(this);\n\n        if (trial === errorObject) {\n          hasErrors = true;\n          errors = errors || (errorObject.e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n        }\n      }\n\n      if (isArray(_subscriptions)) {\n        index = -1;\n        len = _subscriptions.length;\n\n        while (++index < len) {\n          var sub = _subscriptions[index];\n\n          if (isObject(sub)) {\n            var _trial = tryCatch(sub.unsubscribe).call(sub);\n\n            if (_trial === errorObject) {\n              hasErrors = true;\n              errors = errors || [];\n              var err = errorObject.e;\n\n              if (err instanceof UnsubscriptionError) {\n                errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n              } else {\n                errors.push(err);\n              }\n            }\n          }\n        }\n      }\n\n      if (hasErrors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }, {\n    key: \"add\",\n    value: function add(teardown) {\n      if (!teardown || teardown === Subscription.EMPTY) {\n        return Subscription.EMPTY;\n      }\n\n      if (teardown === this) {\n        return this;\n      }\n\n      var subscription = teardown;\n\n      switch (typeof teardown) {\n        case 'function':\n          subscription = new Subscription(teardown);\n\n        case 'object':\n          if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n            return subscription;\n          } else if (this.closed) {\n            subscription.unsubscribe();\n            return subscription;\n          } else if (typeof subscription._addParent !== 'function') {\n            var tmp = subscription;\n            subscription = new Subscription();\n            subscription._subscriptions = [tmp];\n          }\n\n          break;\n\n        default:\n          throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n      }\n\n      var subscriptions = this._subscriptions || (this._subscriptions = []);\n      subscriptions.push(subscription);\n\n      subscription._addParent(this);\n\n      return subscription;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(subscription) {\n      var subscriptions = this._subscriptions;\n\n      if (subscriptions) {\n        var subscriptionIndex = subscriptions.indexOf(subscription);\n\n        if (subscriptionIndex !== -1) {\n          subscriptions.splice(subscriptionIndex, 1);\n        }\n      }\n    }\n  }, {\n    key: \"_addParent\",\n    value: function _addParent(parent) {\n      var _parent = this._parent,\n          _parents = this._parents;\n\n      if (!_parent || _parent === parent) {\n        this._parent = parent;\n      } else if (!_parents) {\n        this._parents = [parent];\n      } else if (_parents.indexOf(parent) === -1) {\n        _parents.push(parent);\n      }\n    }\n  }]);\n\n  return Subscription;\n}();\n\nSubscription.EMPTY = function (empty) {\n  empty.closed = true;\n  return empty;\n}(new Subscription());\n\nfunction flattenUnsubscriptionErrors(errors) {\n  return errors.reduce(function (errs, err) {\n    return errs.concat(err instanceof UnsubscriptionError ? err.errors : err);\n  }, []);\n}","map":{"version":3,"sources":["../../src/internal/Subscription.ts"],"names":[],"mappings":"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","sourcesContent":["import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nexport class Subscription {\n    constructor(unsubscribe) {\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    unsubscribe() {\n        let hasErrors = false;\n        let errors;\n        if (this.closed) {\n            return;\n        }\n        let { _parent, _parents, _unsubscribe, _subscriptions } = this;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        let index = -1;\n        let len = _parents ? _parents.length : 0;\n        while (_parent) {\n            _parent.remove(this);\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            let trial = tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.e instanceof UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                const sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    let trial = tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        let err = errorObject.e;\n                        if (err instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    }\n    add(teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        let subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function') {\n                    const tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        const subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    }\n    remove(subscription) {\n        const subscriptions = this._subscriptions;\n        if (subscriptions) {\n            const subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    }\n    _addParent(parent) {\n        let { _parent, _parents } = this;\n        if (!_parent || _parent === parent) {\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            _parents.push(parent);\n        }\n    }\n}\nSubscription.EMPTY = (function (empty) {\n    empty.closed = true;\n    return empty;\n}(new Subscription()));\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n//# sourceMappingURL=Subscription.js.map"]},"metadata":{},"sourceType":"module"}