{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/LibraryMangementSystem/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\n\nimport * as ɵngcc0 from '@angular/core';\nvar _c0 = [\"*\", [[\"mat-card-footer\"]]];\nvar _c1 = [\"*\", \"mat-card-footer\"];\nvar _c2 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nvar _c3 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\", \"*\"];\nvar _c4 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"img\"]], \"*\"];\nvar _c5 = [\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\", \"img\", \"*\"];\n\nvar MatCardContent = function MatCardContent() {\n  _classCallCheck(this, MatCardContent);\n};\n\nMatCardContent.ɵfac = function MatCardContent_Factory(t) {\n  return new (t || MatCardContent)();\n};\n\nMatCardContent.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardContent,\n  selectors: [[\"mat-card-content\"]],\n  hostAttrs: [1, \"mat-card-content\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardContent, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-content',\n      host: {\n        'class': 'mat-card-content'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\n\n\nvar MatCardTitle = function MatCardTitle() {\n  _classCallCheck(this, MatCardTitle);\n};\n\nMatCardTitle.ɵfac = function MatCardTitle_Factory(t) {\n  return new (t || MatCardTitle)();\n};\n\nMatCardTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardTitle,\n  selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]],\n  hostAttrs: [1, \"mat-card-title\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardTitle, [{\n    type: Directive,\n    args: [{\n      selector: \"mat-card-title, [mat-card-title], [matCardTitle]\",\n      host: {\n        'class': 'mat-card-title'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\n\n\nvar MatCardSubtitle = function MatCardSubtitle() {\n  _classCallCheck(this, MatCardSubtitle);\n};\n\nMatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) {\n  return new (t || MatCardSubtitle)();\n};\n\nMatCardSubtitle.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardSubtitle,\n  selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]],\n  hostAttrs: [1, \"mat-card-subtitle\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardSubtitle, [{\n    type: Directive,\n    args: [{\n      selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\",\n      host: {\n        'class': 'mat-card-subtitle'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\n\n\nvar MatCardActions = function MatCardActions() {\n  _classCallCheck(this, MatCardActions);\n\n  /**\n   * Position of the actions inside the card.\n   */\n  this.align = 'start';\n};\n\nMatCardActions.ɵfac = function MatCardActions_Factory(t) {\n  return new (t || MatCardActions)();\n};\n\nMatCardActions.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardActions,\n  selectors: [[\"mat-card-actions\"]],\n  hostAttrs: [1, \"mat-card-actions\"],\n  hostVars: 2,\n  hostBindings: function MatCardActions_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-card-actions-align-end\", ctx.align === \"end\");\n    }\n  },\n  inputs: {\n    align: \"align\"\n  },\n  exportAs: [\"matCardActions\"]\n});\nMatCardActions.propDecorators = {\n  align: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardActions, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-actions',\n      exportAs: 'matCardActions',\n      host: {\n        'class': 'mat-card-actions',\n        '[class.mat-card-actions-align-end]': 'align === \"end\"'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    align: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\n\n\nvar MatCardFooter = function MatCardFooter() {\n  _classCallCheck(this, MatCardFooter);\n};\n\nMatCardFooter.ɵfac = function MatCardFooter_Factory(t) {\n  return new (t || MatCardFooter)();\n};\n\nMatCardFooter.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardFooter,\n  selectors: [[\"mat-card-footer\"]],\n  hostAttrs: [1, \"mat-card-footer\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardFooter, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-footer',\n      host: {\n        'class': 'mat-card-footer'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\n\n\nvar MatCardImage = function MatCardImage() {\n  _classCallCheck(this, MatCardImage);\n};\n\nMatCardImage.ɵfac = function MatCardImage_Factory(t) {\n  return new (t || MatCardImage)();\n};\n\nMatCardImage.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardImage,\n  selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]],\n  hostAttrs: [1, \"mat-card-image\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-image], [matCardImage]',\n      host: {\n        'class': 'mat-card-image'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\n\n\nvar MatCardSmImage = function MatCardSmImage() {\n  _classCallCheck(this, MatCardSmImage);\n};\n\nMatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) {\n  return new (t || MatCardSmImage)();\n};\n\nMatCardSmImage.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardSmImage,\n  selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]],\n  hostAttrs: [1, \"mat-card-sm-image\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardSmImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-sm-image], [matCardImageSmall]',\n      host: {\n        'class': 'mat-card-sm-image'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\n\n\nvar MatCardMdImage = function MatCardMdImage() {\n  _classCallCheck(this, MatCardMdImage);\n};\n\nMatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) {\n  return new (t || MatCardMdImage)();\n};\n\nMatCardMdImage.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardMdImage,\n  selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]],\n  hostAttrs: [1, \"mat-card-md-image\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardMdImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-md-image], [matCardImageMedium]',\n      host: {\n        'class': 'mat-card-md-image'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\n\n\nvar MatCardLgImage = function MatCardLgImage() {\n  _classCallCheck(this, MatCardLgImage);\n};\n\nMatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) {\n  return new (t || MatCardLgImage)();\n};\n\nMatCardLgImage.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardLgImage,\n  selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]],\n  hostAttrs: [1, \"mat-card-lg-image\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardLgImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-lg-image], [matCardImageLarge]',\n      host: {\n        'class': 'mat-card-lg-image'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\n\n\nvar MatCardXlImage = function MatCardXlImage() {\n  _classCallCheck(this, MatCardXlImage);\n};\n\nMatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) {\n  return new (t || MatCardXlImage)();\n};\n\nMatCardXlImage.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardXlImage,\n  selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]],\n  hostAttrs: [1, \"mat-card-xl-image\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardXlImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-xl-image], [matCardImageXLarge]',\n      host: {\n        'class': 'mat-card-xl-image'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\n\n\nvar MatCardAvatar = function MatCardAvatar() {\n  _classCallCheck(this, MatCardAvatar);\n};\n\nMatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) {\n  return new (t || MatCardAvatar)();\n};\n\nMatCardAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatCardAvatar,\n  selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]],\n  hostAttrs: [1, \"mat-card-avatar\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardAvatar, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-avatar], [matCardAvatar]',\n      host: {\n        'class': 'mat-card-avatar'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\n\n\nvar MatCard = function MatCard() {\n  _classCallCheck(this, MatCard);\n};\n\nMatCard.ɵfac = function MatCard_Factory(t) {\n  return new (t || MatCard)();\n};\n\nMatCard.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatCard,\n  selectors: [[\"mat-card\"]],\n  hostAttrs: [1, \"mat-card\"],\n  exportAs: [\"matCard\"],\n  ngContentSelectors: _c1,\n  decls: 2,\n  vars: 0,\n  template: function MatCard_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵprojection(1, 1);\n    }\n  },\n  styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);display:block;position:relative;padding:16px;border-radius:4px}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}@media (-ms-high-contrast:active){.mat-card{outline:solid 1px}}.mat-card-actions,.mat-card-content,.mat-card-subtitle{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px 0}@media (max-width:599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card-content>:first-child,.mat-card>:first-child{margin-top:0}.mat-card-content>:last-child:not(.mat-card-footer),.mat-card>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child{margin-left:0;margin-right:0}.mat-card-subtitle:not(:first-child),.mat-card-title:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCard, [{\n    type: Component,\n    args: [{\n      selector: 'mat-card',\n      exportAs: 'matCard',\n      template: \"<ng-content></ng-content><ng-content select=\\\"mat-card-footer\\\"></ng-content>\",\n      styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);display:block;position:relative;padding:16px;border-radius:4px}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}@media (-ms-high-contrast:active){.mat-card{outline:solid 1px}}.mat-card-actions,.mat-card-content,.mat-card-subtitle{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px 0}@media (max-width:599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card-content>:first-child,.mat-card>:first-child{margin-top:0}.mat-card-content>:last-child:not(.mat-card-footer),.mat-card>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child{margin-left:0;margin-right:0}.mat-card-subtitle:not(:first-child),.mat-card-title:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\"],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-card'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\n\n\nvar MatCardHeader = function MatCardHeader() {\n  _classCallCheck(this, MatCardHeader);\n};\n\nMatCardHeader.ɵfac = function MatCardHeader_Factory(t) {\n  return new (t || MatCardHeader)();\n};\n\nMatCardHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatCardHeader,\n  selectors: [[\"mat-card-header\"]],\n  hostAttrs: [1, \"mat-card-header\"],\n  ngContentSelectors: _c3,\n  decls: 4,\n  vars: 0,\n  consts: [[1, \"mat-card-header-text\"]],\n  template: function MatCardHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c2);\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(3, 2);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-card-header',\n      template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content><div class=\\\"mat-card-header-text\\\"><ng-content select=\\\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\\\"></ng-content></div><ng-content></ng-content>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-card-header'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\n\n\nvar MatCardTitleGroup = function MatCardTitleGroup() {\n  _classCallCheck(this, MatCardTitleGroup);\n};\n\nMatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) {\n  return new (t || MatCardTitleGroup)();\n};\n\nMatCardTitleGroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatCardTitleGroup,\n  selectors: [[\"mat-card-title-group\"]],\n  hostAttrs: [1, \"mat-card-title-group\"],\n  ngContentSelectors: _c5,\n  decls: 4,\n  vars: 0,\n  template: function MatCardTitleGroup_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c4);\n      ɵngcc0.ɵɵelementStart(0, \"div\");\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵprojection(3, 2);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardTitleGroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-card-title-group',\n      template: \"<div><ng-content select=\\\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\\\"></ng-content></div><ng-content select=\\\"img\\\"></ng-content><ng-content></ng-content>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-card-title-group'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar MatCardModule = function MatCardModule() {\n  _classCallCheck(this, MatCardModule);\n};\n\nMatCardModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatCardModule\n});\nMatCardModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatCardModule_Factory(t) {\n    return new (t || MatCardModule)();\n  },\n  imports: [[MatCommonModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCardModule, {\n    declarations: function declarations() {\n      return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar];\n    },\n    imports: function imports() {\n      return [MatCommonModule];\n    },\n    exports: function exports() {\n      return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCardModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, MatCommonModule],\n      declarations: [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardImage, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardXlImage, MatCardAvatar, MatCard, MatCardHeader, MatCardTitleGroup, MatCardModule };","map":{"version":3,"sources":["../../../src/lib/card/card.ts","../../../src/lib/card/card-module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Directive,\n  Input,\n} from '@angular/core';\n\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-content',\n  host: {'class': 'mat-card-content'}\n})\nexport class MatCardContent {}\n\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n  host: {\n    'class': 'mat-card-title'\n  }\n})\nexport class MatCardTitle {}\n\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n  host: {\n    'class': 'mat-card-subtitle'\n  }\n})\nexport class MatCardSubtitle {}\n\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-actions',\n  exportAs: 'matCardActions',\n  host: {\n    'class': 'mat-card-actions',\n    '[class.mat-card-actions-align-end]': 'align === \"end\"',\n  }\n})\nexport class MatCardActions {\n  /** Position of the actions inside the card. */\n  @Input() align: 'start' | 'end' = 'start';\n}\n\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-footer',\n  host: {'class': 'mat-card-footer'}\n})\nexport class MatCardFooter {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-image], [matCardImage]',\n  host: {'class': 'mat-card-image'}\n})\nexport class MatCardImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-sm-image], [matCardImageSmall]',\n  host: {'class': 'mat-card-sm-image'}\n})\nexport class MatCardSmImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-md-image], [matCardImageMedium]',\n  host: {'class': 'mat-card-md-image'}\n})\nexport class MatCardMdImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-lg-image], [matCardImageLarge]',\n  host: {'class': 'mat-card-lg-image'}\n})\nexport class MatCardLgImage {}\n\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-xl-image], [matCardImageXLarge]',\n  host: {'class': 'mat-card-xl-image'}\n})\nexport class MatCardXlImage {}\n\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-avatar], [matCardAvatar]',\n  host: {'class': 'mat-card-avatar'}\n})\nexport class MatCardAvatar {}\n\n\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-card',\n  exportAs: 'matCard',\n  templateUrl: 'card.html',\n  styleUrls: ['card.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card'}\n})\nexport class MatCard {}\n\n\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-card-header',\n  templateUrl: 'card-header.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-header'}\n})\nexport class MatCardHeader {}\n\n\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-card-title-group',\n  templateUrl: 'card-title-group.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-title-group'}\n})\nexport class MatCardTitleGroup {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {\n  MatCard,\n  MatCardActions,\n  MatCardAvatar,\n  MatCardContent,\n  MatCardFooter,\n  MatCardHeader,\n  MatCardImage,\n  MatCardLgImage,\n  MatCardMdImage,\n  MatCardSmImage,\n  MatCardSubtitle,\n  MatCardTitle,\n  MatCardTitleGroup,\n  MatCardXlImage,\n} from './card';\n\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [\n    MatCard,\n    MatCardHeader,\n    MatCardTitleGroup,\n    MatCardContent,\n    MatCardTitle,\n    MatCardSubtitle,\n    MatCardActions,\n    MatCardFooter,\n    MatCardSmImage,\n    MatCardMdImage,\n    MatCardLgImage,\n    MatCardImage,\n    MatCardXlImage,\n    MatCardAvatar,\n    MatCommonModule,\n  ],\n  declarations: [\n    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n    MatCardXlImage, MatCardAvatar,\n  ],\n})\nexport class MatCardModule {}\n"]},"metadata":{},"sourceType":"module"}