{"ast":null,"code":"import _assertThisInitialized from \"/Applications/MAMP/htdocs/LibraryMangementSystem/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Applications/MAMP/htdocs/LibraryMangementSystem/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Applications/MAMP/htdocs/LibraryMangementSystem/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Applications/MAMP/htdocs/LibraryMangementSystem/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Applications/MAMP/htdocs/LibraryMangementSystem/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _createClass from \"/Applications/MAMP/htdocs/LibraryMangementSystem/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Applications/MAMP/htdocs/LibraryMangementSystem/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule, InjectionToken, Optional, Inject, isDevMode, inject, LOCALE_ID, Injectable, Directive, ElementRef, Input, NgZone, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, EventEmitter, Output, defineInjectable } from '@angular/core';\nimport { HAMMER_LOADER, HammerGestureConfig } from '@angular/platform-browser';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { startWith } from 'rxjs/operators';\nimport { isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * \\@docs-private\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\nvar _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nvar _c1 = [\"*\", \"mat-option, ng-container\"];\n\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"\")(\"disabled\", ctx_r0.disabled);\n  }\n}\n\nvar _c2 = [\"*\"];\n\nvar AnimationCurves = function AnimationCurves() {\n  _classCallCheck(this, AnimationCurves);\n};\n\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/**\n * \\@docs-private\n */\n\nvar AnimationDurations = function AnimationDurations() {\n  _classCallCheck(this, AnimationDurations);\n};\n\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @type {?}\n */\n\nvar MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\n\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n\n\nvar MatCommonModule = /*#__PURE__*/function () {\n  /**\n   * @param {?} _sanityChecksEnabled\n   * @param {?=} _hammerLoader\n   */\n  function MatCommonModule(_sanityChecksEnabled, _hammerLoader) {\n    _classCallCheck(this, MatCommonModule);\n\n    this._sanityChecksEnabled = _sanityChecksEnabled;\n    this._hammerLoader = _hammerLoader;\n    /**\n     * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n     */\n\n    this._hasDoneGlobalChecks = false;\n    /**\n     * Whether we've already checked for HammerJs availability.\n     */\n\n    this._hasCheckedHammer = false;\n    /**\n     * Reference to the global `document` object.\n     */\n\n    this._document = typeof document === 'object' && document ? document : null;\n    /**\n     * Reference to the global 'window' object.\n     */\n\n    this._window = typeof window === 'object' && window ? window : null;\n\n    if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n\n      this._checkThemeIsPresent();\n\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n  /**\n   * Whether any sanity checks are enabled\n   * @private\n   * @return {?}\n   */\n\n\n  _createClass(MatCommonModule, [{\n    key: \"_areChecksEnabled\",\n    value: function _areChecksEnabled() {\n      return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n    /**\n     * Whether the code is running in tests.\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"_isTestEnv\",\n    value: function _isTestEnv() {\n      /** @type {?} */\n      var window =\n      /** @type {?} */\n      this._window;\n      return window && (window.__karma__ || window.jasmine);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"_checkDoctypeIsDefined\",\n    value: function _checkDoctypeIsDefined() {\n      if (this._document && !this._document.doctype) {\n        console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n\n  }, {\n    key: \"_checkThemeIsPresent\",\n    value: function _checkThemeIsPresent() {\n      // We need to assert that the `body` is defined, because these checks run very early\n      // and the `body` won't be defined if the consumer put their scripts in the `head`.\n      if (!this._document || !this._document.body || typeof getComputedStyle !== 'function') {\n        return;\n      }\n      /** @type {?} */\n\n\n      var testElement = this._document.createElement('div');\n\n      testElement.classList.add('mat-theme-loaded-marker');\n\n      this._document.body.appendChild(testElement);\n      /** @type {?} */\n\n\n      var computedStyle = getComputedStyle(testElement); // In some situations the computed style of the test element can be null. For example in\n      // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n\n      if (computedStyle && computedStyle.display !== 'none') {\n        console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n      }\n\n      this._document.body.removeChild(testElement);\n    }\n    /**\n     * Checks whether HammerJS is available.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_checkHammerIsAvailable\",\n    value: function _checkHammerIsAvailable() {\n      if (this._hasCheckedHammer || !this._window) {\n        return;\n      }\n\n      if (this._areChecksEnabled() && !\n      /** @type {?} */\n      this._window['Hammer'] && !this._hammerLoader) {\n        console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\n      }\n\n      this._hasCheckedHammer = true;\n    }\n  }]);\n\n  return MatCommonModule;\n}();\n\nMatCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatCommonModule\n});\nMatCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatCommonModule_Factory(t) {\n    return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8));\n  },\n  imports: [[BidiModule], BidiModule]\n});\n/** @nocollapse */\n\nMatCommonModule.ctorParameters = function () {\n  return [{\n    type: Boolean,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MATERIAL_SANITY_CHECKS]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [HAMMER_LOADER]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, {\n    imports: function imports() {\n      return [BidiModule];\n    },\n    exports: function exports() {\n      return [BidiModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [BidiModule]\n    }]\n  }], function () {\n    return [{\n      type: Boolean,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MATERIAL_SANITY_CHECKS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HAMMER_LOADER]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\n\n\nfunction mixinDisabled(base) {\n  return /*#__PURE__*/function (_base) {\n    _inherits(_class, _base);\n\n    var _super = _createSuper(_class);\n\n    /**\n     * @param {...?} args\n     */\n    function _class() {\n      var _this;\n\n      _classCallCheck(this, _class);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this._disabled = false;\n      return _this;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(_class, [{\n      key: \"disabled\",\n      get: function get() {\n        return this._disabled;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n      ,\n      set: function set(value) {\n        this._disabled = coerceBooleanProperty(value);\n      }\n    }]);\n\n    return _class;\n  }(base);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\n\n\nfunction mixinColor(base, defaultColor) {\n  return /*#__PURE__*/function (_base2) {\n    _inherits(_class2, _base2);\n\n    var _super2 = _createSuper(_class2);\n\n    _createClass(_class2, [{\n      key: \"color\",\n\n      /**\n       * @return {?}\n       */\n      get: function get() {\n        return this._color;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n      ,\n      set: function set(value) {\n        /** @type {?} */\n        var colorPalette = value || defaultColor;\n\n        if (colorPalette !== this._color) {\n          if (this._color) {\n            this._elementRef.nativeElement.classList.remove(\"mat-\".concat(this._color));\n          }\n\n          if (colorPalette) {\n            this._elementRef.nativeElement.classList.add(\"mat-\".concat(colorPalette));\n          }\n\n          this._color = colorPalette;\n        }\n      }\n      /**\n       * @param {...?} args\n       */\n\n    }]);\n\n    function _class2() {\n      var _this2;\n\n      _classCallCheck(this, _class2);\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this2 = _super2.call.apply(_super2, [this].concat(args)); // Set the default color that can be specified from the mixin.\n\n      _this2.color = defaultColor;\n      return _this2;\n    }\n\n    return _class2;\n  }(base);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\n\n\nfunction mixinDisableRipple(base) {\n  return /*#__PURE__*/function (_base3) {\n    _inherits(_class3, _base3);\n\n    var _super3 = _createSuper(_class3);\n\n    /**\n     * @param {...?} args\n     */\n    function _class3() {\n      var _this3;\n\n      _classCallCheck(this, _class3);\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      _this3 = _super3.call.apply(_super3, [this].concat(args));\n      _this3._disableRipple = false;\n      return _this3;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n\n\n    _createClass(_class3, [{\n      key: \"disableRipple\",\n      get: function get() {\n        return this._disableRipple;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n      ,\n      set: function set(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n      }\n    }]);\n\n    return _class3;\n  }(base);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\n\n\nfunction mixinTabIndex(base) {\n  var defaultTabIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return /*#__PURE__*/function (_base4) {\n    _inherits(_class4, _base4);\n\n    var _super4 = _createSuper(_class4);\n\n    /**\n     * @param {...?} args\n     */\n    function _class4() {\n      var _this4;\n\n      _classCallCheck(this, _class4);\n\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      _this4 = _super4.call.apply(_super4, [this].concat(args));\n      _this4._tabIndex = defaultTabIndex;\n      return _this4;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(_class4, [{\n      key: \"tabIndex\",\n      get: function get() {\n        return this.disabled ? -1 : this._tabIndex;\n      }\n      /**\n       * @param {?} value\n       * @return {?}\n       */\n      ,\n      set: function set(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value != null ? value : defaultTabIndex;\n      }\n    }]);\n\n    return _class4;\n  }(base);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\n\n\nfunction mixinErrorState(base) {\n  return /*#__PURE__*/function (_base5) {\n    _inherits(_class5, _base5);\n\n    var _super5 = _createSuper(_class5);\n\n    /**\n     * @param {...?} args\n     */\n    function _class5() {\n      var _this5;\n\n      _classCallCheck(this, _class5);\n\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      _this5 = _super5.call.apply(_super5, [this].concat(args));\n      /**\n       * Whether the component is in an error state.\n       */\n\n      _this5.errorState = false;\n      /**\n       * Stream that emits whenever the state of the input changes such that the wrapping\n       * `MatFormField` needs to run change detection.\n       */\n\n      _this5.stateChanges = new Subject();\n      return _this5;\n    }\n    /**\n     * @return {?}\n     */\n\n\n    _createClass(_class5, [{\n      key: \"updateErrorState\",\n      value: function updateErrorState() {\n        /** @type {?} */\n        var oldState = this.errorState;\n        /** @type {?} */\n\n        var parent = this._parentFormGroup || this._parentForm;\n        /** @type {?} */\n\n        var matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n        /** @type {?} */\n\n        var control = this.ngControl ?\n        /** @type {?} */\n        this.ngControl.control : null;\n        /** @type {?} */\n\n        var newState = matcher.isErrorState(control, parent);\n\n        if (newState !== oldState) {\n          this.errorState = newState;\n          this.stateChanges.next();\n        }\n      }\n    }]);\n\n    return _class5;\n  }(base);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\n\n\nfunction mixinInitialized(base) {\n  return /*#__PURE__*/function (_base6) {\n    _inherits(_class6, _base6);\n\n    var _super6 = _createSuper(_class6);\n\n    /**\n     * @param {...?} args\n     */\n    function _class6() {\n      var _this6;\n\n      _classCallCheck(this, _class6);\n\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      _this6 = _super6.call.apply(_super6, [this].concat(args));\n      /**\n       * Whether this directive has been marked as initialized.\n       */\n\n      _this6._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n\n      _this6._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n\n      _this6.initialized = new Observable(function (subscriber) {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (_this6._isInitialized) {\n          _this6._notifySubscriber(subscriber);\n        } else {\n          /** @type {?} */\n          _this6._pendingSubscribers.push(subscriber);\n        }\n      });\n      return _this6;\n    }\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * \\@docs-private\n     * @return {?}\n     */\n\n\n    _createClass(_class6, [{\n      key: \"_markInitialized\",\n      value: function _markInitialized() {\n        if (this._isInitialized) {\n          throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n        }\n\n        this._isInitialized = true;\n\n        /** @type {?} */\n        this._pendingSubscribers.forEach(this._notifySubscriber);\n\n        this._pendingSubscribers = null;\n      }\n      /**\n       * Emits and completes the subscriber stream (should only emit once).\n       * @param {?} subscriber\n       * @return {?}\n       */\n\n    }, {\n      key: \"_notifySubscriber\",\n      value: function _notifySubscriber(subscriber) {\n        subscriber.next();\n        subscriber.complete();\n      }\n    }]);\n\n    return _class6;\n  }(base);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n * @type {?}\n */\n\n\nvar MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\n\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 8.0.0\n * @type {?}\n */\n\n\nvar MAT_DATE_LOCALE_PROVIDER = {\n  provide: MAT_DATE_LOCALE,\n  useExisting: LOCALE_ID\n};\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\n\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter() {\n    _classCallCheck(this, DateAdapter);\n\n    this._localeChanges = new Subject();\n  }\n  /**\n   * A stream that emits when the locale changes.\n   * @return {?}\n   */\n\n\n  _createClass(DateAdapter, [{\n    key: \"deserialize\",\n\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    value: function deserialize(value) {\n      if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n        return value;\n      }\n\n      return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n\n  }, {\n    key: \"setLocale\",\n    value: function setLocale(locale) {\n      this.locale = locale;\n\n      this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n\n  }, {\n    key: \"compareDate\",\n    value: function compareDate(first, second) {\n      return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n\n  }, {\n    key: \"sameDate\",\n    value: function sameDate(first, second) {\n      if (first && second) {\n        /** @type {?} */\n        var firstValid = this.isValid(first);\n        /** @type {?} */\n\n        var secondValid = this.isValid(second);\n\n        if (firstValid && secondValid) {\n          return !this.compareDate(first, second);\n        }\n\n        return firstValid == secondValid;\n      }\n\n      return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n\n  }, {\n    key: \"clampDate\",\n    value: function clampDate(date, min, max) {\n      if (min && this.compareDate(date, min) < 0) {\n        return min;\n      }\n\n      if (max && this.compareDate(date, max) > 0) {\n        return max;\n      }\n\n      return date;\n    }\n  }, {\n    key: \"localeChanges\",\n    get: function get() {\n      return this._localeChanges;\n    }\n  }]);\n\n  return DateAdapter;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n\n/**\n * Whether the browser supports the Intl API.\n * @type {?}\n */\n\nvar SUPPORTS_INTL_API; // We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/material2/issues/15687\n\ntry {\n  SUPPORTS_INTL_API = typeof Intl != 'undefined';\n} catch (_a) {\n  SUPPORTS_INTL_API = false;\n}\n/**\n * The default month names to use if Intl API is not available.\n * @type {?}\n */\n\n\nvar DEFAULT_MONTH_NAMES = {\n  'long': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\nvar ɵ0 = function ɵ0(i) {\n  return String(i + 1);\n};\n/**\n * The default date names to use if Intl API is not available.\n * @type {?}\n */\n\n\nvar DEFAULT_DATE_NAMES = range(31, ɵ0);\n/**\n * The default day of the week names to use if Intl API is not available.\n * @type {?}\n */\n\nvar DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n * @type {?}\n */\n\nvar ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\n\nfunction range(length, valueFunction) {\n  /** @type {?} */\n  var valuesArray = Array(length);\n\n  for (var i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n\n  return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\n\n\nvar NativeDateAdapter = /*#__PURE__*/function (_DateAdapter) {\n  _inherits(NativeDateAdapter, _DateAdapter);\n\n  var _super7 = _createSuper(NativeDateAdapter);\n\n  /**\n   * @param {?} matDateLocale\n   * @param {?} platform\n   */\n  function NativeDateAdapter(matDateLocale, platform) {\n    var _thisSuper, _this7;\n\n    _classCallCheck(this, NativeDateAdapter);\n\n    _this7 = _super7.call(this);\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     *\n     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n     * getting the string representation of a Date object from it's utc representation. We're keeping\n     * it here for sometime, just for precaution, in case we decide to revert some of these changes\n     * though.\n     */\n\n    _this7.useUtcForDisplay = true;\n\n    _get((_thisSuper = _assertThisInitialized(_this7), _getPrototypeOf(NativeDateAdapter.prototype)), \"setLocale\", _thisSuper).call(_thisSuper, matDateLocale); // IE does its own time zone correction, so we disable this on IE.\n\n\n    _this7.useUtcForDisplay = !platform.TRIDENT;\n    _this7._clampDate = platform.TRIDENT || platform.EDGE;\n    return _this7;\n  }\n  /**\n   * @param {?} date\n   * @return {?}\n   */\n\n\n  _createClass(NativeDateAdapter, [{\n    key: \"getYear\",\n    value: function getYear(date) {\n      return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"getMonth\",\n    value: function getMonth(date) {\n      return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"getDate\",\n    value: function getDate(date) {\n      return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"getDayOfWeek\",\n    value: function getDayOfWeek(date) {\n      return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n\n  }, {\n    key: \"getMonthNames\",\n    value: function getMonthNames(style) {\n      var _this8 = this;\n\n      if (SUPPORTS_INTL_API) {\n        /** @type {?} */\n        var dtf = new Intl.DateTimeFormat(this.locale, {\n          month: style,\n          timeZone: 'utc'\n        });\n        return range(12, function (i) {\n          return _this8._stripDirectionalityCharacters(_this8._format(dtf, new Date(2017, i, 1)));\n        });\n      }\n\n      return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getDateNames\",\n    value: function getDateNames() {\n      var _this9 = this;\n\n      if (SUPPORTS_INTL_API) {\n        /** @type {?} */\n        var dtf = new Intl.DateTimeFormat(this.locale, {\n          day: 'numeric',\n          timeZone: 'utc'\n        });\n        return range(31, function (i) {\n          return _this9._stripDirectionalityCharacters(_this9._format(dtf, new Date(2017, 0, i + 1)));\n        });\n      }\n\n      return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n\n  }, {\n    key: \"getDayOfWeekNames\",\n    value: function getDayOfWeekNames(style) {\n      var _this10 = this;\n\n      if (SUPPORTS_INTL_API) {\n        /** @type {?} */\n        var dtf = new Intl.DateTimeFormat(this.locale, {\n          weekday: style,\n          timeZone: 'utc'\n        });\n        return range(7, function (i) {\n          return _this10._stripDirectionalityCharacters(_this10._format(dtf, new Date(2017, 0, i + 1)));\n        });\n      }\n\n      return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"getYearName\",\n    value: function getYearName(date) {\n      if (SUPPORTS_INTL_API) {\n        /** @type {?} */\n        var dtf = new Intl.DateTimeFormat(this.locale, {\n          year: 'numeric',\n          timeZone: 'utc'\n        });\n        return this._stripDirectionalityCharacters(this._format(dtf, date));\n      }\n\n      return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"getFirstDayOfWeek\",\n    value: function getFirstDayOfWeek() {\n      // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n      return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"getNumDaysInMonth\",\n    value: function getNumDaysInMonth(date) {\n      return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone(date) {\n      return new Date(date.getTime());\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"createDate\",\n    value: function createDate(year, month, date) {\n      // Check for invalid month and date (except upper bound on date which we have to check after\n      // creating the Date).\n      if (month < 0 || month > 11) {\n        throw Error(\"Invalid month index \\\"\".concat(month, \"\\\". Month index has to be between 0 and 11.\"));\n      }\n\n      if (date < 1) {\n        throw Error(\"Invalid date \\\"\".concat(date, \"\\\". Date has to be greater than 0.\"));\n      }\n      /** @type {?} */\n\n\n      var result = this._createDateWithOverflow(year, month, date); // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n\n\n      if (result.getMonth() != month) {\n        throw Error(\"Invalid date \\\"\".concat(date, \"\\\" for month with index \\\"\").concat(month, \"\\\".\"));\n      }\n\n      return result;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"today\",\n    value: function today() {\n      return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(value) {\n      // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n      // parameters.\n      if (typeof value == 'number') {\n        return new Date(value);\n      }\n\n      return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n\n  }, {\n    key: \"format\",\n    value: function format(date, displayFormat) {\n      if (!this.isValid(date)) {\n        throw Error('NativeDateAdapter: Cannot format invalid date.');\n      }\n\n      if (SUPPORTS_INTL_API) {\n        // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n        // if we attempt to format a date whose year is less than 1 or greater than 9999.\n        if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n          date = this.clone(date);\n          date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n        }\n\n        displayFormat = Object.assign({}, displayFormat, {\n          timeZone: 'utc'\n        });\n        /** @type {?} */\n\n        var dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n        return this._stripDirectionalityCharacters(this._format(dtf, date));\n      }\n\n      return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n\n  }, {\n    key: \"addCalendarYears\",\n    value: function addCalendarYears(date, years) {\n      return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n\n  }, {\n    key: \"addCalendarMonths\",\n    value: function addCalendarMonths(date, months) {\n      /** @type {?} */\n      var newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date)); // It's possible to wind up in the wrong month if the original month has more days than the new\n      // month. In this case we want to go to the last day of the desired month.\n      // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n      // guarantee this.\n\n\n      if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n        newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n      }\n\n      return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n\n  }, {\n    key: \"addCalendarDays\",\n    value: function addCalendarDays(date, days) {\n      return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"toIso8601\",\n    value: function toIso8601(date) {\n      return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(value) {\n      if (typeof value === 'string') {\n        if (!value) {\n          return null;\n        } // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n        // string is the right format first.\n\n\n        if (ISO_8601_REGEX.test(value)) {\n          /** @type {?} */\n          var date = new Date(value);\n\n          if (this.isValid(date)) {\n            return date;\n          }\n        }\n      }\n\n      return _get(_getPrototypeOf(NativeDateAdapter.prototype), \"deserialize\", this).call(this, value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n\n  }, {\n    key: \"isDateInstance\",\n    value: function isDateInstance(obj) {\n      return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"invalid\",\n    value: function invalid() {\n      return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createDateWithOverflow\",\n    value: function _createDateWithOverflow(year, month, date) {\n      /** @type {?} */\n      var result = new Date(year, month, date); // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n      // abbreviations for 19xx.\n\n      if (year >= 0 && year < 100) {\n        result.setFullYear(this.getYear(result) - 1900);\n      }\n\n      return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @private\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n\n  }, {\n    key: \"_2digit\",\n    value: function _2digit(n) {\n      return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @private\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n\n  }, {\n    key: \"_stripDirectionalityCharacters\",\n    value: function _stripDirectionalityCharacters(str) {\n      return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @private\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n\n  }, {\n    key: \"_format\",\n    value: function _format(dtf, date) {\n      /** @type {?} */\n      var d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n      return dtf.format(d);\n    }\n  }]);\n\n  return NativeDateAdapter;\n}(DateAdapter);\n\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) {\n  return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc1.Platform));\n};\n\nNativeDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NativeDateAdapter,\n  factory: NativeDateAdapter.ɵfac\n});\n/** @nocollapse */\n\nNativeDateAdapter.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_DATE_LOCALE]\n    }]\n  }, {\n    type: Platform\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_LOCALE]\n      }]\n    }, {\n      type: ɵngcc1.Platform\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nvar MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nvar NativeDateModule = function NativeDateModule() {\n  _classCallCheck(this, NativeDateModule);\n};\n\nNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: NativeDateModule\n});\nNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function NativeDateModule_Factory(t) {\n    return new (t || NativeDateModule)();\n  },\n  providers: [{\n    provide: DateAdapter,\n    useClass: NativeDateAdapter\n  }],\n  imports: [[PlatformModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, {\n    imports: function imports() {\n      return [PlatformModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [PlatformModule],\n      providers: [{\n        provide: DateAdapter,\n        useClass: NativeDateAdapter\n      }]\n    }]\n  }], null, null);\n})();\n\nvar ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\n\nvar MatNativeDateModule = function MatNativeDateModule() {\n  _classCallCheck(this, MatNativeDateModule);\n};\n\nMatNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatNativeDateModule\n});\nMatNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatNativeDateModule_Factory(t) {\n    return new (t || MatNativeDateModule)();\n  },\n  providers: [{\n    provide: MAT_DATE_FORMATS,\n    useValue: ɵ0$1\n  }],\n  imports: [[NativeDateModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, {\n    imports: [NativeDateModule]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NativeDateModule],\n      providers: [{\n        provide: MAT_DATE_FORMATS,\n        useValue: ɵ0$1\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\n\n\nvar ShowOnDirtyErrorStateMatcher = /*#__PURE__*/function () {\n  function ShowOnDirtyErrorStateMatcher() {\n    _classCallCheck(this, ShowOnDirtyErrorStateMatcher);\n  }\n\n  _createClass(ShowOnDirtyErrorStateMatcher, [{\n    key: \"isErrorState\",\n\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    value: function isErrorState(control, form) {\n      return !!(control && control.invalid && (control.dirty || form && form.submitted));\n    }\n  }]);\n\n  return ShowOnDirtyErrorStateMatcher;\n}();\n\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) {\n  return new (t || ShowOnDirtyErrorStateMatcher)();\n};\n\nShowOnDirtyErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ShowOnDirtyErrorStateMatcher,\n  factory: ShowOnDirtyErrorStateMatcher.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\n\n\nvar ErrorStateMatcher = /*#__PURE__*/function () {\n  function ErrorStateMatcher() {\n    _classCallCheck(this, ErrorStateMatcher);\n  }\n\n  _createClass(ErrorStateMatcher, [{\n    key: \"isErrorState\",\n\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    value: function isErrorState(control, form) {\n      return !!(control && control.invalid && (control.touched || form && form.submitted));\n    }\n  }]);\n\n  return ErrorStateMatcher;\n}();\n\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) {\n  return new (t || ErrorStateMatcher)();\n};\n\nErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: ErrorStateMatcher,\n  factory: ErrorStateMatcher.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\nErrorStateMatcher.ngInjectableDef = defineInjectable({\n  factory: function ErrorStateMatcher_Factory() {\n    return new ErrorStateMatcher();\n  },\n  token: ErrorStateMatcher,\n  providedIn: \"root\"\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n * @type {?}\n */\n\n\nvar MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\n\nvar ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = ['longpress', 'slide', 'slidestart', 'slideend', 'slideright', 'slideleft'];\n\nvar ɵ0$2 = function ɵ0$2() {},\n    ɵ1 = function ɵ1() {};\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n * @type {?}\n */\n\n\nvar noopHammerInstance = {\n  on: ɵ0$2,\n  off: ɵ1\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n */\n\nvar GestureConfig = /*#__PURE__*/function (_HammerGestureConfig) {\n  _inherits(GestureConfig, _HammerGestureConfig);\n\n  var _super8 = _createSuper(GestureConfig);\n\n  /**\n   * @param {?=} _hammerOptions\n   * @param {?=} commonModule\n   */\n  function GestureConfig(_hammerOptions, commonModule) {\n    var _this11;\n\n    _classCallCheck(this, GestureConfig);\n\n    _this11 = _super8.call(this);\n    _this11._hammerOptions = _hammerOptions;\n    /**\n     * List of new event names to add to the gesture support list\n     */\n\n    _this11.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n\n    if (commonModule) {\n      commonModule._checkHammerIsAvailable();\n    }\n\n    return _this11;\n  }\n  /**\n   * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n   *\n   * Our gesture names come from the Material Design gestures spec:\n   * https://material.io/design/#gestures-touch-mechanics\n   *\n   * More information on default recognizers can be found in Hammer docs:\n   * http://hammerjs.github.io/recognizer-pan/\n   * http://hammerjs.github.io/recognizer-press/\n   *\n   * @param {?} element Element to which to assign the new HammerJS gestures.\n   * @return {?} Newly-created HammerJS instance.\n   */\n\n\n  _createClass(GestureConfig, [{\n    key: \"buildHammer\",\n    value: function buildHammer(element) {\n      /** @type {?} */\n      var hammer = typeof window !== 'undefined' ?\n      /** @type {?} */\n      window.Hammer : null;\n\n      if (!hammer) {\n        // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n        // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n        // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n        // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n        // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n        // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n        // undefined).\n        // @breaking-change 8.0.0\n        return noopHammerInstance;\n      }\n      /** @type {?} */\n\n\n      var mc = new hammer(element, this._hammerOptions || undefined); // Default Hammer Recognizers.\n\n      /** @type {?} */\n\n      var pan = new hammer.Pan();\n      /** @type {?} */\n\n      var swipe = new hammer.Swipe();\n      /** @type {?} */\n\n      var press = new hammer.Press(); // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n      // Otherwise the previous `recognizeWith` will be dropped.\n      // TODO: Confirm threshold numbers with Material Design UX Team\n\n      /** @type {?} */\n\n      var slide = this._createRecognizer(pan, {\n        event: 'slide',\n        threshold: 0\n      }, swipe);\n      /** @type {?} */\n\n\n      var longpress = this._createRecognizer(press, {\n        event: 'longpress',\n        time: 500\n      }); // Overwrite the default `pan` event to use the swipe event.\n\n\n      pan.recognizeWith(swipe); // Since the slide event threshold is set to zero, the slide recognizer can fire and\n      // accidentally reset the longpress recognizer. In order to make sure that the two\n      // recognizers can run simultaneously but don't affect each other, we allow the slide\n      // recognizer to recognize while a longpress is being processed.\n      // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n\n      longpress.recognizeWith(slide); // Add customized gestures to Hammer manager\n\n      mc.add([swipe, press, pan, slide, longpress]);\n      return (\n        /** @type {?} */\n        mc\n      );\n    }\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @private\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n\n  }, {\n    key: \"_createRecognizer\",\n    value: function _createRecognizer(base, options) {\n      /** @type {?} */\n      var recognizer = new\n      /** @type {?} */\n      base.constructor(options);\n\n      for (var _len7 = arguments.length, inheritances = new Array(_len7 > 2 ? _len7 - 2 : 0), _key7 = 2; _key7 < _len7; _key7++) {\n        inheritances[_key7 - 2] = arguments[_key7];\n      }\n\n      inheritances.push(base);\n      inheritances.forEach(function (item) {\n        return recognizer.recognizeWith(item);\n      });\n      return recognizer;\n    }\n  }]);\n\n  return GestureConfig;\n}(HammerGestureConfig);\n\nGestureConfig.ɵfac = function GestureConfig_Factory(t) {\n  return new (t || GestureConfig)(ɵngcc0.ɵɵinject(MAT_HAMMER_OPTIONS, 8), ɵngcc0.ɵɵinject(MatCommonModule, 8));\n};\n\nGestureConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: GestureConfig,\n  factory: GestureConfig.ɵfac\n});\n/** @nocollapse */\n\nGestureConfig.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_HAMMER_OPTIONS]\n    }]\n  }, {\n    type: MatCommonModule,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(GestureConfig, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_HAMMER_OPTIONS]\n      }]\n    }, {\n      type: MatCommonModule,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\n\n\nvar MatLine = function MatLine() {\n  _classCallCheck(this, MatLine);\n};\n\nMatLine.ɵfac = function MatLine_Factory(t) {\n  return new (t || MatLine)();\n};\n\nMatLine.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatLine,\n  selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n  hostAttrs: [1, \"mat-line\"]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatLine, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-line], [matLine]',\n      host: {\n        'class': 'mat-line'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @param {?} lines\n * @param {?} element\n * @return {?}\n */\n\n\nfunction setLines(lines, element) {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(function (_ref) {\n    var length = _ref.length;\n    setClass(element, 'mat-2-line', false);\n    setClass(element, 'mat-3-line', false);\n    setClass(element, 'mat-multi-line', false);\n\n    if (length === 2 || length === 3) {\n      setClass(element, \"mat-\".concat(length, \"-line\"), true);\n    } else if (length > 3) {\n      setClass(element, \"mat-multi-line\", true);\n    }\n  });\n}\n/**\n * Adds or removes a class from an element.\n * @param {?} element\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\n\n\nfunction setClass(element, className, isAdd) {\n  /** @type {?} */\n  var classList = element.nativeElement.classList;\n  isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @deprecated Use `setLines` instead.\n * \\@breaking-change 8.0.0\n */\n\n\nvar MatLineSetter =\n/**\n * @param {?} lines\n * @param {?} element\n */\nfunction MatLineSetter(lines, element) {\n  _classCallCheck(this, MatLineSetter);\n\n  setLines(lines, element);\n};\n\nvar MatLineModule = function MatLineModule() {\n  _classCallCheck(this, MatLineModule);\n};\n\nMatLineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatLineModule\n});\nMatLineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatLineModule_Factory(t) {\n    return new (t || MatLineModule)();\n  },\n  imports: [[MatCommonModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, {\n    declarations: [MatLine],\n    imports: [MatCommonModule],\n    exports: [MatLine, MatCommonModule]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatLine, MatCommonModule],\n      declarations: [MatLine]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @enum {number} */\n\n\nvar RippleState = {\n  FADING_IN: 0,\n  VISIBLE: 1,\n  FADING_OUT: 2,\n  HIDDEN: 3\n};\nRippleState[RippleState.FADING_IN] = 'FADING_IN';\nRippleState[RippleState.VISIBLE] = 'VISIBLE';\nRippleState[RippleState.FADING_OUT] = 'FADING_OUT';\nRippleState[RippleState.HIDDEN] = 'HIDDEN';\n/**\n * Reference to a previously launched ripple element.\n */\n\nvar RippleRef = /*#__PURE__*/function () {\n  /**\n   * @param {?} _renderer\n   * @param {?} element\n   * @param {?} config\n   */\n  function RippleRef(_renderer, element, config) {\n    _classCallCheck(this, RippleRef);\n\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    /**\n     * Current state of the ripple.\n     */\n\n    this.state = RippleState.HIDDEN;\n  }\n  /**\n   * Fades out the ripple element.\n   * @return {?}\n   */\n\n\n  _createClass(RippleRef, [{\n    key: \"fadeOut\",\n    value: function fadeOut() {\n      this._renderer.fadeOutRipple(this);\n    }\n  }]);\n\n  return RippleRef;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n * @type {?}\n */\n\n\nvar defaultRippleAnimationConfig = {\n  enterDuration: 450,\n  exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n * @type {?}\n */\n\nvar ignoreMouseEventsTimeout = 800;\n/**\n * Options that apply to all the event listeners that are bound by the ripple renderer.\n * @type {?}\n */\n\nvar passiveEventOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\n\nvar RippleRenderer = /*#__PURE__*/function () {\n  /**\n   * @param {?} _target\n   * @param {?} _ngZone\n   * @param {?} elementRef\n   * @param {?} platform\n   */\n  function RippleRenderer(_target, _ngZone, elementRef, platform) {\n    var _this12 = this;\n\n    _classCallCheck(this, RippleRenderer);\n\n    this._target = _target;\n    this._ngZone = _ngZone;\n    /**\n     * Whether the pointer is currently down or not.\n     */\n\n    this._isPointerDown = false;\n    /**\n     * Events to be registered on the trigger element.\n     */\n\n    this._triggerEvents = new Map();\n    /**\n     * Set of currently active ripple references.\n     */\n\n    this._activeRipples = new Set();\n    /**\n     * Function being called whenever the trigger is being pressed using mouse.\n     */\n\n    this.onMousedown = function (event) {\n      // Screen readers will fire fake mouse events for space/enter. Skip launching a\n      // ripple in this case for consistency with the non-screen-reader experience.\n\n      /** @type {?} */\n      var isFakeMousedown = isFakeMousedownFromScreenReader(event);\n      /** @type {?} */\n\n      var isSyntheticEvent = _this12._lastTouchStartEvent && Date.now() < _this12._lastTouchStartEvent + ignoreMouseEventsTimeout;\n\n      if (!_this12._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n        _this12._isPointerDown = true;\n\n        _this12.fadeInRipple(event.clientX, event.clientY, _this12._target.rippleConfig);\n      }\n    };\n    /**\n     * Function being called whenever the trigger is being pressed using touch.\n     */\n\n\n    this.onTouchStart = function (event) {\n      if (!_this12._target.rippleDisabled) {\n        // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n        // events will launch a second ripple if we don't ignore mouse events for a specific\n        // time after a touchstart event.\n        _this12._lastTouchStartEvent = Date.now();\n        _this12._isPointerDown = true; // Use `changedTouches` so we skip any touches where the user put\n        // their finger down, but used another finger to tap the element again.\n\n        /** @type {?} */\n\n        var touches = event.changedTouches;\n\n        for (var i = 0; i < touches.length; i++) {\n          _this12.fadeInRipple(touches[i].clientX, touches[i].clientY, _this12._target.rippleConfig);\n        }\n      }\n    };\n    /**\n     * Function being called whenever the trigger is being released.\n     */\n\n\n    this.onPointerUp = function () {\n      if (!_this12._isPointerDown) {\n        return;\n      }\n\n      _this12._isPointerDown = false; // Fade-out all ripples that are visible and not persistent.\n\n      _this12._activeRipples.forEach(function (ripple) {\n        // By default, only ripples that are completely visible will fade out on pointer release.\n        // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n\n        /** @type {?} */\n        var isVisible = ripple.state === RippleState.VISIBLE || ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n\n        if (!ripple.config.persistent && isVisible) {\n          ripple.fadeOut();\n        }\n      });\n    }; // Only do anything if we're on the browser.\n\n\n    if (platform.isBrowser) {\n      this._containerElement = elementRef.nativeElement; // Specify events which need to be registered on the trigger.\n\n      this._triggerEvents.set('mousedown', this.onMousedown).set('mouseup', this.onPointerUp).set('mouseleave', this.onPointerUp).set('touchstart', this.onTouchStart).set('touchend', this.onPointerUp).set('touchcancel', this.onPointerUp);\n    }\n  }\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param {?=} config Extra ripple options.\n   * @return {?}\n   */\n\n\n  _createClass(RippleRenderer, [{\n    key: \"fadeInRipple\",\n    value: function fadeInRipple(x, y) {\n      var _this13 = this;\n\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      /** @type {?} */\n      var containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n      /** @type {?} */\n\n\n      var animationConfig = Object.assign({}, defaultRippleAnimationConfig, config.animation);\n\n      if (config.centered) {\n        x = containerRect.left + containerRect.width / 2;\n        y = containerRect.top + containerRect.height / 2;\n      }\n      /** @type {?} */\n\n\n      var radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n      /** @type {?} */\n\n      var offsetX = x - containerRect.left;\n      /** @type {?} */\n\n      var offsetY = y - containerRect.top;\n      /** @type {?} */\n\n      var duration = animationConfig.enterDuration;\n      /** @type {?} */\n\n      var ripple = document.createElement('div');\n      ripple.classList.add('mat-ripple-element');\n      ripple.style.left = \"\".concat(offsetX - radius, \"px\");\n      ripple.style.top = \"\".concat(offsetY - radius, \"px\");\n      ripple.style.height = \"\".concat(radius * 2, \"px\");\n      ripple.style.width = \"\".concat(radius * 2, \"px\"); // If the color is not set, the default CSS color will be used.\n\n      ripple.style.backgroundColor = config.color || null;\n      ripple.style.transitionDuration = \"\".concat(duration, \"ms\");\n\n      this._containerElement.appendChild(ripple); // By default the browser does not recalculate the styles of dynamically created\n      // ripple elements. This is critical because then the `scale` would not animate properly.\n\n\n      enforceStyleRecalculation(ripple);\n      ripple.style.transform = 'scale(1)'; // Exposed reference to the ripple that will be returned.\n\n      /** @type {?} */\n\n      var rippleRef = new RippleRef(this, ripple, config);\n      rippleRef.state = RippleState.FADING_IN; // Add the ripple reference to the list of all active ripples.\n\n      this._activeRipples.add(rippleRef);\n\n      if (!config.persistent) {\n        this._mostRecentTransientRipple = rippleRef;\n      } // Wait for the ripple element to be completely faded in.\n      // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n\n\n      this.runTimeoutOutsideZone(function () {\n        /** @type {?} */\n        var isMostRecentTransientRipple = rippleRef === _this13._mostRecentTransientRipple;\n        rippleRef.state = RippleState.VISIBLE; // When the timer runs out while the user has kept their pointer down, we want to\n        // keep only the persistent ripples and the latest transient ripple. We do this,\n        // because we don't want stacked transient ripples to appear after their enter\n        // animation has finished.\n\n        if (!config.persistent && (!isMostRecentTransientRipple || !_this13._isPointerDown)) {\n          rippleRef.fadeOut();\n        }\n      }, duration);\n      return rippleRef;\n    }\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n\n  }, {\n    key: \"fadeOutRipple\",\n    value: function fadeOutRipple(rippleRef) {\n      /** @type {?} */\n      var wasActive = this._activeRipples.delete(rippleRef);\n\n      if (rippleRef === this._mostRecentTransientRipple) {\n        this._mostRecentTransientRipple = null;\n      } // Clear out the cached bounding rect if we have no more ripples.\n\n\n      if (!this._activeRipples.size) {\n        this._containerRect = null;\n      } // For ripples that are not active anymore, don't re-run the fade-out animation.\n\n\n      if (!wasActive) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var rippleEl = rippleRef.element;\n      /** @type {?} */\n\n      var animationConfig = Object.assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\n      rippleEl.style.transitionDuration = \"\".concat(animationConfig.exitDuration, \"ms\");\n      rippleEl.style.opacity = '0';\n      rippleRef.state = RippleState.FADING_OUT; // Once the ripple faded out, the ripple can be safely removed from the DOM.\n\n      this.runTimeoutOutsideZone(function () {\n        rippleRef.state = RippleState.HIDDEN;\n\n        /** @type {?} */\n        rippleEl.parentNode.removeChild(rippleEl);\n      }, animationConfig.exitDuration);\n    }\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n\n  }, {\n    key: \"fadeOutAll\",\n    value: function fadeOutAll() {\n      this._activeRipples.forEach(function (ripple) {\n        return ripple.fadeOut();\n      });\n    }\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} element\n     * @return {?}\n     */\n\n  }, {\n    key: \"setupTriggerEvents\",\n    value: function setupTriggerEvents(element) {\n      var _this14 = this;\n\n      if (!element || element === this._triggerElement) {\n        return;\n      } // Remove all previously registered event listeners from the trigger element.\n\n\n      this._removeTriggerEvents();\n\n      this._ngZone.runOutsideAngular(function () {\n        _this14._triggerEvents.forEach(function (fn, type) {\n          element.addEventListener(type, fn, passiveEventOptions);\n        });\n      });\n\n      this._triggerElement = element;\n    }\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @private\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n\n  }, {\n    key: \"runTimeoutOutsideZone\",\n    value: function runTimeoutOutsideZone(fn) {\n      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      this._ngZone.runOutsideAngular(function () {\n        return setTimeout(fn, delay);\n      });\n    }\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_removeTriggerEvents\",\n    value: function _removeTriggerEvents() {\n      var _this15 = this;\n\n      if (this._triggerElement) {\n        this._triggerEvents.forEach(function (fn, type) {\n          /** @type {?} */\n          _this15._triggerElement.removeEventListener(type, fn, passiveEventOptions);\n        });\n      }\n    }\n  }]);\n\n  return RippleRenderer;\n}();\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\n\n\nfunction enforceStyleRecalculation(element) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\n\n\nfunction distanceToFurthestCorner(x, y, rect) {\n  /** @type {?} */\n  var distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  /** @type {?} */\n\n  var distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Injection token that can be used to specify the global ripple options.\n * @type {?}\n */\n\n\nvar MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\n\nvar MatRipple = /*#__PURE__*/function () {\n  /**\n   * @param {?} _elementRef\n   * @param {?} ngZone\n   * @param {?} platform\n   * @param {?=} globalOptions\n   * @param {?=} animationMode\n   */\n  function MatRipple(_elementRef, ngZone, platform, globalOptions, animationMode) {\n    _classCallCheck(this, MatRipple);\n\n    this._elementRef = _elementRef;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n\n    this.radius = 0;\n    this._disabled = false;\n    /**\n     * Whether ripple directive is initialized and the input bindings are set.\n     */\n\n    this._isInitialized = false;\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n\n    if (animationMode === 'NoopAnimations') {\n      this._globalOptions.animation = {\n        enterDuration: 0,\n        exitDuration: 0\n      };\n    }\n  }\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   * @return {?}\n   */\n\n\n  _createClass(MatRipple, [{\n    key: \"ngOnInit\",\n\n    /**\n     * @return {?}\n     */\n    value: function ngOnInit() {\n      this._isInitialized = true;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._rippleRenderer._removeTriggerEvents();\n    }\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n\n  }, {\n    key: \"fadeOutAll\",\n    value: function fadeOutAll() {\n      this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n\n  }, {\n    key: \"_setupTriggerEventsIfEnabled\",\n\n    /**\n     * Sets up the trigger event listeners if ripples are enabled.\n     * @private\n     * @return {?}\n     */\n    value: function _setupTriggerEventsIfEnabled() {\n      if (!this.disabled && this._isInitialized) {\n        this._rippleRenderer.setupTriggerEvents(this.trigger);\n      }\n    }\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n\n  }, {\n    key: \"launch\",\n    value: function launch(configOrX) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var config = arguments.length > 2 ? arguments[2] : undefined;\n\n      if (typeof configOrX === 'number') {\n        return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign({}, this.rippleConfig, config));\n      } else {\n        return this._rippleRenderer.fadeInRipple(0, 0, Object.assign({}, this.rippleConfig, configOrX));\n      }\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._disabled = value;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     * @return {?}\n     */\n\n  }, {\n    key: \"trigger\",\n    get: function get() {\n      return this._trigger || this._elementRef.nativeElement;\n    }\n    /**\n     * @param {?} trigger\n     * @return {?}\n     */\n    ,\n    set: function set(trigger) {\n      this._trigger = trigger;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n  }, {\n    key: \"rippleConfig\",\n    get: function get() {\n      return {\n        centered: this.centered,\n        radius: this.radius,\n        color: this.color,\n        animation: Object.assign({}, this._globalOptions.animation, this.animation),\n        terminateOnPointerUp: this._globalOptions.terminateOnPointerUp\n      };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n\n  }, {\n    key: \"rippleDisabled\",\n    get: function get() {\n      return this.disabled || !!this._globalOptions.disabled;\n    }\n  }]);\n\n  return MatRipple;\n}();\n\nMatRipple.ɵfac = function MatRipple_Factory(t) {\n  return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatRipple.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: MatRipple,\n  selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]],\n  hostAttrs: [1, \"mat-ripple\"],\n  hostVars: 2,\n  hostBindings: function MatRipple_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    }\n  },\n  inputs: {\n    radius: [\"matRippleRadius\", \"radius\"],\n    disabled: [\"matRippleDisabled\", \"disabled\"],\n    trigger: [\"matRippleTrigger\", \"trigger\"],\n    color: [\"matRippleColor\", \"color\"],\n    unbounded: [\"matRippleUnbounded\", \"unbounded\"],\n    centered: [\"matRippleCentered\", \"centered\"],\n    animation: [\"matRippleAnimation\", \"animation\"]\n  },\n  exportAs: [\"matRipple\"]\n});\n/** @nocollapse */\n\nMatRipple.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: NgZone\n  }, {\n    type: Platform\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n    }]\n  }, {\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatRipple.propDecorators = {\n  color: [{\n    type: Input,\n    args: ['matRippleColor']\n  }],\n  unbounded: [{\n    type: Input,\n    args: ['matRippleUnbounded']\n  }],\n  centered: [{\n    type: Input,\n    args: ['matRippleCentered']\n  }],\n  radius: [{\n    type: Input,\n    args: ['matRippleRadius']\n  }],\n  animation: [{\n    type: Input,\n    args: ['matRippleAnimation']\n  }],\n  disabled: [{\n    type: Input,\n    args: ['matRippleDisabled']\n  }],\n  trigger: [{\n    type: Input,\n    args: ['matRippleTrigger']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-ripple], [matRipple]',\n      exportAs: 'matRipple',\n      host: {\n        'class': 'mat-ripple',\n        '[class.mat-ripple-unbounded]': 'unbounded'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: ɵngcc1.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    radius: [{\n      type: Input,\n      args: ['matRippleRadius']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['matRippleDisabled']\n    }],\n    trigger: [{\n      type: Input,\n      args: ['matRippleTrigger']\n    }],\n    color: [{\n      type: Input,\n      args: ['matRippleColor']\n    }],\n    unbounded: [{\n      type: Input,\n      args: ['matRippleUnbounded']\n    }],\n    centered: [{\n      type: Input,\n      args: ['matRippleCentered']\n    }],\n    animation: [{\n      type: Input,\n      args: ['matRippleAnimation']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar MatRippleModule = function MatRippleModule() {\n  _classCallCheck(this, MatRippleModule);\n};\n\nMatRippleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatRippleModule\n});\nMatRippleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatRippleModule_Factory(t) {\n    return new (t || MatRippleModule)();\n  },\n  imports: [[MatCommonModule, PlatformModule], MatCommonModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, {\n    declarations: function declarations() {\n      return [MatRipple];\n    },\n    imports: function imports() {\n      return [MatCommonModule, PlatformModule];\n    },\n    exports: function exports() {\n      return [MatRipple, MatCommonModule];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, PlatformModule],\n      exports: [MatRipple, MatCommonModule],\n      declarations: [MatRipple]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\n\n\nvar MatPseudoCheckbox =\n/**\n * @param {?=} _animationMode\n */\nfunction MatPseudoCheckbox(_animationMode) {\n  _classCallCheck(this, MatPseudoCheckbox);\n\n  this._animationMode = _animationMode;\n  /**\n   * Display state of the checkbox.\n   */\n\n  this.state = 'unchecked';\n  /**\n   * Whether the checkbox is disabled.\n   */\n\n  this.disabled = false;\n};\n\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) {\n  return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatPseudoCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatPseudoCheckbox,\n  selectors: [[\"mat-pseudo-checkbox\"]],\n  hostAttrs: [1, \"mat-pseudo-checkbox\"],\n  hostVars: 8,\n  hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    state: \"state\",\n    disabled: \"disabled\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function MatPseudoCheckbox_Template(rf, ctx) {},\n  styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatPseudoCheckbox.ctorParameters = function () {\n  return [{\n    type: String,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [ANIMATION_MODULE_TYPE]\n    }]\n  }];\n};\n\nMatPseudoCheckbox.propDecorators = {\n  state: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'mat-pseudo-checkbox',\n      styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"],\n      template: '',\n      host: {\n        'class': 'mat-pseudo-checkbox',\n        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      }\n    }]\n  }], function () {\n    return [{\n      type: String,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    state: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar MatPseudoCheckboxModule = function MatPseudoCheckboxModule() {\n  _classCallCheck(this, MatPseudoCheckboxModule);\n};\n\nMatPseudoCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatPseudoCheckboxModule\n});\nMatPseudoCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatPseudoCheckboxModule_Factory(t) {\n    return new (t || MatPseudoCheckboxModule)();\n  }\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, {\n    declarations: [MatPseudoCheckbox],\n    exports: [MatPseudoCheckbox]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      exports: [MatPseudoCheckbox],\n      declarations: [MatPseudoCheckbox]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatOptgroup.\n\n/**\n * \\@docs-private\n */\n\n\nvar MatOptgroupBase = function MatOptgroupBase() {\n  _classCallCheck(this, MatOptgroupBase);\n};\n/** @type {?} */\n\n\nvar _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase); // Counter for unique group ids.\n\n/** @type {?} */\n\n\nvar _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\n\nvar MatOptgroup = /*#__PURE__*/function (_MatOptgroupMixinBase2) {\n  _inherits(MatOptgroup, _MatOptgroupMixinBase2);\n\n  var _super9 = _createSuper(MatOptgroup);\n\n  function MatOptgroup() {\n    var _this16;\n\n    _classCallCheck(this, MatOptgroup);\n\n    _this16 = _super9.apply(this, arguments);\n    /**\n     * Unique id for the underlying label.\n     */\n\n    _this16._labelId = \"mat-optgroup-label-\".concat(_uniqueOptgroupIdCounter++);\n    return _this16;\n  }\n\n  return MatOptgroup;\n}(_MatOptgroupMixinBase);\n\nMatOptgroup.ɵfac = function MatOptgroup_Factory(t) {\n  return ɵMatOptgroup_BaseFactory(t || MatOptgroup);\n};\n\nMatOptgroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatOptgroup,\n  selectors: [[\"mat-optgroup\"]],\n  hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"],\n  hostVars: 4,\n  hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n      ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    label: \"label\"\n  },\n  exportAs: [\"matOptgroup\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 2,\n  consts: [[1, \"mat-optgroup-label\", 3, \"id\"]],\n  template: function MatOptgroup_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c0);\n      ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n      ɵngcc0.ɵɵtext(1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(3, 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵtextInterpolate(ctx.label);\n    }\n  },\n  styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\nMatOptgroup.propDecorators = {\n  label: [{\n    type: Input\n  }]\n};\nvar ɵMatOptgroup_BaseFactory = /*@__PURE__*/ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup);\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-optgroup',\n      exportAs: 'matOptgroup',\n      template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }}<ng-content></ng-content></label><ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled'],\n      styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\n      host: {\n        'class': 'mat-optgroup',\n        'role': 'group',\n        '[class.mat-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n      }\n    }]\n  }], null, {\n    label: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\n\n\nvar _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\n\nvar MatOptionSelectionChange =\n/**\n * @param {?} source\n * @param {?=} isUserInput\n */\nfunction MatOptionSelectionChange(source) {\n  var isUserInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  _classCallCheck(this, MatOptionSelectionChange);\n\n  this.source = source;\n  this.isUserInput = isUserInput;\n};\n/**\n * Injection token used to provide the parent component to options.\n * @type {?}\n */\n\n\nvar MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\n\nvar MatOption = /*#__PURE__*/function () {\n  /**\n   * @param {?} _element\n   * @param {?} _changeDetectorRef\n   * @param {?} _parent\n   * @param {?} group\n   */\n  function MatOption(_element, _changeDetectorRef, _parent, group) {\n    _classCallCheck(this, MatOption);\n\n    this._element = _element;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parent = _parent;\n    this.group = group;\n    this._selected = false;\n    this._active = false;\n    this._disabled = false;\n    this._mostRecentViewValue = '';\n    /**\n     * The unique ID of the option.\n     */\n\n    this.id = \"mat-option-\".concat(_uniqueIdCounter++);\n    /**\n     * Event emitted when the option is selected or deselected.\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n\n    this.onSelectionChange = new EventEmitter();\n    /**\n     * Emits when the state of the option changes and any parents have to be notified.\n     */\n\n    this._stateChanges = new Subject();\n  }\n  /**\n   * Whether the wrapping component is in multiple selection mode.\n   * @return {?}\n   */\n\n\n  _createClass(MatOption, [{\n    key: \"select\",\n\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    value: function select() {\n      if (!this._selected) {\n        this._selected = true;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent();\n      }\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n\n  }, {\n    key: \"deselect\",\n    value: function deselect() {\n      if (this._selected) {\n        this._selected = false;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent();\n      }\n    }\n    /**\n     * Sets focus onto this option.\n     * @return {?}\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      /** @type {?} */\n      var element = this._getHostElement();\n\n      if (typeof element.focus === 'function') {\n        element.focus();\n      }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n\n  }, {\n    key: \"setActiveStyles\",\n    value: function setActiveStyles() {\n      if (!this._active) {\n        this._active = true;\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n\n  }, {\n    key: \"setInactiveStyles\",\n    value: function setInactiveStyles() {\n      if (this._active) {\n        this._active = false;\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      return this.viewValue;\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"_handleKeydown\",\n    value: function _handleKeydown(event) {\n      if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n        this._selectViaInteraction(); // Prevent the page from scrolling down and form submits.\n\n\n        event.preventDefault();\n      }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n\n  }, {\n    key: \"_selectViaInteraction\",\n    value: function _selectViaInteraction() {\n      if (!this.disabled) {\n        this._selected = this.multiple ? !this._selected : true;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent(true);\n      }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getAriaSelected\",\n    value: function _getAriaSelected() {\n      return this.selected || (this.multiple ? false : null);\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getTabIndex\",\n    value: function _getTabIndex() {\n      return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n\n  }, {\n    key: \"_getHostElement\",\n    value: function _getHostElement() {\n      return this._element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      // Since parent components could be using the option's label to display the selected values\n      // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n      // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n      // relatively cheap, however we still limit them only to selected options in order to avoid\n      // hitting the DOM too often.\n      if (this._selected) {\n        /** @type {?} */\n        var viewValue = this.viewValue;\n\n        if (viewValue !== this._mostRecentViewValue) {\n          this._mostRecentViewValue = viewValue;\n\n          this._stateChanges.next();\n        }\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n    /**\n     * Emits the selection change event.\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n\n  }, {\n    key: \"_emitSelectionChangeEvent\",\n    value: function _emitSelectionChangeEvent() {\n      var isUserInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n  }, {\n    key: \"multiple\",\n    get: function get() {\n      return this._parent && this._parent.multiple;\n    }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this._selected;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this.group && this.group.disabled || this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ,\n    set: function set(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether ripples for the option are disabled.\n     * @return {?}\n     */\n\n  }, {\n    key: \"disableRipple\",\n    get: function get() {\n      return this._parent && this._parent.disableRipple;\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     * @return {?}\n     */\n\n  }, {\n    key: \"viewValue\",\n    get: function get() {\n      // TODO(kara): Add input property alternative for node envs.\n      return (this._getHostElement().textContent || '').trim();\n    }\n  }]);\n\n  return MatOption;\n}();\n\nMatOption.ɵfac = function MatOption_Factory(t) {\n  return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MatOptgroup, 8));\n};\n\nMatOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: MatOption,\n  selectors: [[\"mat-option\"]],\n  hostAttrs: [\"role\", \"option\", 1, \"mat-option\"],\n  hostVars: 12,\n  hostBindings: function MatOption_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n        return ctx._selectViaInteraction();\n      })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n      ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    id: \"id\",\n    disabled: \"disabled\",\n    value: \"value\"\n  },\n  outputs: {\n    onSelectionChange: \"onSelectionChange\"\n  },\n  exportAs: [\"matOption\"],\n  ngContentSelectors: _c2,\n  decls: 4,\n  vars: 3,\n  consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]],\n  template: function MatOption_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelement(3, \"div\", 2);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    }\n  },\n  directives: [ɵngcc2.NgIf, MatRipple, MatPseudoCheckbox],\n  styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n/** @nocollapse */\n\nMatOption.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_OPTION_PARENT_COMPONENT]\n    }]\n  }, {\n    type: MatOptgroup,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\nMatOption.propDecorators = {\n  value: [{\n    type: Input\n  }],\n  id: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  onSelectionChange: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-option',\n      exportAs: 'matOption',\n      host: {\n        'role': 'option',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mat-selected]': 'selected',\n        '[class.mat-option-multiple]': 'multiple',\n        '[class.mat-active]': 'active',\n        '[id]': 'id',\n        '[attr.aria-selected]': '_getAriaSelected()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[class.mat-option-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        'class': 'mat-option'\n      },\n      styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}@media (-ms-high-contrast:active){.mat-option{margin:0 1px}.mat-option.mat-active{border:solid 1px currentColor;margin:0}}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media (-ms-high-contrast:active){.mat-option .mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\n      template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\" [state]=\\\"selected ? 'checked' : ''\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><span class=\\\"mat-option-text\\\"><ng-content></ng-content></span><div class=\\\"mat-option-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\"></div>\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }]\n    }, {\n      type: MatOptgroup,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    id: [{\n      type: Input\n    }],\n    onSelectionChange: [{\n      type: Output\n    }],\n    disabled: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\n\n\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    /** @type {?} */\n    var optionsArray = options.toArray();\n    /** @type {?} */\n\n    var groups = optionGroups.toArray();\n    /** @type {?} */\n\n    var groupCounter = 0;\n\n    for (var i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n\n    return groupCounter;\n  }\n\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\n\n\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n  /** @type {?} */\n  var optionOffset = optionIndex * optionHeight;\n\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nvar MatOptionModule = function MatOptionModule() {\n  _classCallCheck(this, MatOptionModule);\n};\n\nMatOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: MatOptionModule\n});\nMatOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function MatOptionModule_Factory(t) {\n    return new (t || MatOptionModule)();\n  },\n  imports: [[MatRippleModule, CommonModule, MatPseudoCheckboxModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, {\n    declarations: function declarations() {\n      return [MatOption, MatOptgroup];\n    },\n    imports: function imports() {\n      return [MatRippleModule, CommonModule, MatPseudoCheckboxModule];\n    },\n    exports: function exports() {\n      return [MatOption, MatOptgroup];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n      exports: [MatOption, MatOptgroup],\n      declarations: [MatOption, MatOptgroup]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * InjectionToken that can be used to specify the global label options.\n * @type {?}\n */\n\n\nvar MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * \\@docs-private\n * \\@breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n * @type {?}\n */\n\nvar JAN = 0;\n/** @type {?} */\n\nvar FEB = 1;\n/** @type {?} */\n\nvar MAR = 2;\n/** @type {?} */\n\nvar APR = 3;\n/** @type {?} */\n\nvar MAY = 4;\n/** @type {?} */\n\nvar JUN = 5;\n/** @type {?} */\n\nvar JUL = 6;\n/** @type {?} */\n\nvar AUG = 7;\n/** @type {?} */\n\nvar SEP = 8;\n/** @type {?} */\n\nvar OCT = 9;\n/** @type {?} */\n\nvar NOV = 10;\n/** @type {?} */\n\nvar DEC = 11;\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, setLines, MatLine, MatLineSetter, MatLineModule, MatOptionModule, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroupBase, _MatOptgroupMixinBase, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, MATERIAL_SANITY_CHECKS_FACTORY as ɵa1 };","map":{"version":3,"sources":["../../../src/lib/core/animation/animation.ts","../../../src/lib/core/common-behaviors/common-module.ts","../../../src/lib/core/common-behaviors/disabled.ts","../../../src/lib/core/common-behaviors/color.ts","../../../src/lib/core/common-behaviors/disable-ripple.ts","../../../src/lib/core/common-behaviors/tabindex.ts","../../../src/lib/core/common-behaviors/error-state.ts","../../../src/lib/core/common-behaviors/initialized.ts","../../../src/lib/core/datetime/date-adapter.ts","../../../src/lib/core/datetime/date-formats.ts","../../../src/lib/core/datetime/native-date-adapter.ts","../../../src/lib/core/datetime/native-date-formats.ts","../../../src/lib/core/datetime/index.ts","../../../src/lib/core/error/error-options.ts","../../../src/lib/core/gestures/gesture-config.ts","../../../src/lib/core/line/line.ts","../../../src/lib/core/ripple/ripple-ref.ts","../../../src/lib/core/ripple/ripple-renderer.ts","../../../src/lib/core/ripple/ripple.ts","../../../src/lib/core/ripple/index.ts","../../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../../src/lib/core/selection/index.ts","../../../src/lib/core/option/optgroup.ts","../../../src/lib/core/option/option.ts","../../../src/lib/core/option/index.ts","../../../src/lib/core/label/label-options.ts","../../../src/lib/core/month-constants.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport class AnimationCurves {\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n\n\n/** @docs-private */\nexport class AnimationDurations {\n  static COMPLEX = '375ms';\n  static ENTERING = '225ms';\n  static EXITING = '195ms';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule, InjectionToken, Optional, Inject, isDevMode} from '@angular/core';\nimport {HammerLoader, HAMMER_LOADER} from '@angular/platform-browser';\nimport {BidiModule} from '@angular/cdk/bidi';\n\n\n/** Injection token that configures whether the Material sanity checks are enabled. */\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n\n/** @docs-private */\nexport function MATERIAL_SANITY_CHECKS_FACTORY(): boolean {\n  return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n  imports: [BidiModule],\n  exports: [BidiModule],\n})\nexport class MatCommonModule {\n  /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n  private _hasDoneGlobalChecks = false;\n\n  /** Whether we've already checked for HammerJs availability. */\n  private _hasCheckedHammer = false;\n\n  /** Reference to the global `document` object. */\n  private _document = typeof document === 'object' && document ? document : null;\n\n  /** Reference to the global 'window' object. */\n  private _window = typeof window === 'object' && window ? window : null;\n\n  constructor(\n    @Optional() @Inject(MATERIAL_SANITY_CHECKS) private _sanityChecksEnabled: boolean,\n    @Optional() @Inject(HAMMER_LOADER) private _hammerLoader?: HammerLoader) {\n\n    if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n      this._checkDoctypeIsDefined();\n      this._checkThemeIsPresent();\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n\n  /** Whether any sanity checks are enabled */\n  private _areChecksEnabled(): boolean {\n    return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n  }\n\n  /** Whether the code is running in tests. */\n  private _isTestEnv() {\n    const window = this._window as any;\n    return window && (window.__karma__ || window.jasmine);\n  }\n\n  private _checkDoctypeIsDefined(): void {\n    if (this._document && !this._document.doctype) {\n      console.warn(\n        'Current document does not have a doctype. This may cause ' +\n        'some Angular Material components not to behave as expected.'\n      );\n    }\n  }\n\n  private _checkThemeIsPresent(): void {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!this._document || !this._document.body || typeof getComputedStyle !== 'function') {\n      return;\n    }\n\n    const testElement = this._document.createElement('div');\n\n    testElement.classList.add('mat-theme-loaded-marker');\n    this._document.body.appendChild(testElement);\n\n    const computedStyle = getComputedStyle(testElement);\n\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n      console.warn(\n        'Could not find Angular Material core theme. Most Material ' +\n        'components may not work as expected. For more info refer ' +\n        'to the theming guide: https://material.angular.io/guide/theming'\n      );\n    }\n\n    this._document.body.removeChild(testElement);\n  }\n\n  /** Checks whether HammerJS is available. */\n  _checkHammerIsAvailable(): void {\n    if (this._hasCheckedHammer || !this._window) {\n      return;\n    }\n\n    if (this._areChecksEnabled() && !(this._window as any)['Hammer'] && !this._hammerLoader) {\n      console.warn(\n        'Could not find HammerJS. Certain Angular Material components may not work correctly.');\n    }\n    this._hasCheckedHammer = true;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisable {\n  /** Whether the component is disabled. */\n  disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n/** Mixin to augment a directive with a `disabled` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n  return class extends base {\n    private _disabled: boolean = false;\n\n    get disabled() { return this._disabled; }\n    set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {ElementRef} from '@angular/core';\n\n/** @docs-private */\nexport interface CanColor {\n  /** Theme color palette for the component. */\n  color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\n/** @docs-private */\nexport interface HasElementRef {\n  _elementRef: ElementRef;\n}\n\n/** Possible color palette values. */\nexport type ThemePalette = 'primary' | 'accent' | 'warn' | undefined;\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T, defaultColor?: ThemePalette): CanColorCtor & T {\n  return class extends base {\n    private _color: ThemePalette;\n\n    get color(): ThemePalette { return this._color; }\n    set color(value: ThemePalette) {\n      const colorPalette = value || defaultColor;\n\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n\n        this._color = colorPalette;\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisableRipple {\n  /** Whether ripples are disabled. */\n  disableRipple: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableRippleCtor = Constructor<CanDisableRipple>;\n\n/** Mixin to augment a directive with a `disableRipple` property. */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T): CanDisableRippleCtor & T {\n  return class extends base {\n    private _disableRipple: boolean = false;\n\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() { return this._disableRipple; }\n    set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Constructor} from './constructor';\nimport {CanDisable} from './disabled';\n\n\n/** @docs-private */\nexport interface HasTabIndex {\n  /** Tabindex of the component. */\n  tabIndex: number;\n}\n\n/** @docs-private */\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n/** Mixin to augment a directive with a `tabIndex` property. */\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n  return class extends base {\n    private _tabIndex: number = defaultTabIndex;\n\n    get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n    set tabIndex(value: number) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? value : defaultTabIndex;\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FormControl, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {Subject} from 'rxjs';\nimport {ErrorStateMatcher} from '../error/error-options';\nimport {Constructor} from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n  updateErrorState(): void;\n  readonly stateChanges: Subject<void>;\n  errorState: boolean;\n  errorStateMatcher: ErrorStateMatcher;\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n  _parentFormGroup: FormGroupDirective;\n  _parentForm: NgForm;\n  _defaultErrorStateMatcher: ErrorStateMatcher;\n  ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n: CanUpdateErrorStateCtor & T {\n  return class extends base {\n    /** Whether the component is in an error state. */\n    errorState: boolean = false;\n\n    /**\n     * Stream that emits whenever the state of the input changes such that the wrapping\n     * `MatFormField` needs to run change detection.\n     */\n    readonly stateChanges = new Subject<void>();\n\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState() {\n      const oldState = this.errorState;\n      const parent = this._parentFormGroup || this._parentForm;\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      const control = this.ngControl ? this.ngControl.control as FormControl : null;\n      const newState = matcher.isErrorState(control, parent);\n\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n\n    constructor(...args: any[]) {\n      super(...args);\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable, Subscriber} from 'rxjs';\nimport {Constructor} from './constructor';\n\n\n/**\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\n * value once markInitialized has been called, which should be done during the ngOnInit function.\n * If the subscription is made after it has already been marked as initialized, then it will trigger\n * an emit immediately.\n * @docs-private\n */\nexport interface HasInitialized {\n  /** Stream that emits once during the directive/component's ngOnInit. */\n  initialized: Observable<void>;\n\n  /**\n   * Sets the state as initialized and must be called during ngOnInit to notify subscribers that\n   * the directive has been initialized.\n   * @docs-private\n   */\n  _markInitialized: () => void;\n}\n\n/** @docs-private */\nexport type HasInitializedCtor = Constructor<HasInitialized>;\n\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nexport function mixinInitialized<T extends Constructor<{}>>(base: T):\n    HasInitializedCtor & T {\n  return class extends base {\n    /** Whether this directive has been marked as initialized. */\n    _isInitialized = false;\n\n    /**\n     * List of subscribers that subscribed before the directive was initialized. Should be notified\n     * during _markInitialized. Set to null after pending subscribers are notified, and should\n     * not expect to be populated after.\n     */\n    _pendingSubscribers: Subscriber<void>[] | null = [];\n\n    /**\n     * Observable stream that emits when the directive initializes. If already initialized, the\n     * subscriber is stored to be notified once _markInitialized is called.\n     */\n    initialized = new Observable<void>(subscriber => {\n      // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n      // when _markInitialized is called.\n      if (this._isInitialized) {\n        this._notifySubscriber(subscriber);\n      } else {\n        this._pendingSubscribers!.push(subscriber);\n      }\n    });\n\n    constructor(...args: any[]) { super(...args); }\n\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n    _markInitialized(): void {\n      if (this._isInitialized) {\n        throw Error('This directive has already been marked as initialized and ' +\n            'should not be called twice.');\n      }\n\n      this._isInitialized = true;\n\n      this._pendingSubscribers!.forEach(this._notifySubscriber);\n      this._pendingSubscribers = null;\n    }\n\n    /** Emits and completes the subscriber stream (should only emit once). */\n    _notifySubscriber(subscriber: Subscriber<void>): void {\n      subscriber.next();\n      subscriber.complete();\n    }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {inject, InjectionToken, LOCALE_ID} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nexport const MAT_DATE_LOCALE = new InjectionToken<string>('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY,\n});\n\n/** @docs-private */\nexport function MAT_DATE_LOCALE_FACTORY(): string {\n  return inject(LOCALE_ID);\n}\n\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * @breaking-change 8.0.0\n */\nexport const MAT_DATE_LOCALE_PROVIDER = {provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID};\n\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nexport abstract class DateAdapter<D> {\n  /** The locale to use for all dates. */\n  protected locale: any;\n\n  /** A stream that emits when the locale changes. */\n  get localeChanges(): Observable<void> { return this._localeChanges; }\n  protected _localeChanges = new Subject<void>();\n\n  /**\n   * Gets the year component of the given date.\n   * @param date The date to extract the year from.\n   * @returns The year component.\n   */\n  abstract getYear(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * @param date The date to extract the month from.\n   * @returns The month component (0-indexed, 0 = January).\n   */\n  abstract getMonth(date: D): number;\n\n  /**\n   * Gets the date of the month component of the given date.\n   * @param date The date to extract the date of the month from.\n   * @returns The month component (1-indexed, 1 = first of month).\n   */\n  abstract getDate(date: D): number;\n\n  /**\n   * Gets the day of the week component of the given date.\n   * @param date The date to extract the day of the week from.\n   * @returns The month component (0-indexed, 0 = Sunday).\n   */\n  abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Gets a list of names for the months.\n   * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n   * @returns An ordered list of all month names, starting with January.\n   */\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets a list of names for the dates of the month.\n   * @returns An ordered list of all date of the month names, starting with '1'.\n   */\n  abstract getDateNames(): string[];\n\n  /**\n   * Gets a list of names for the days of the week.\n   * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n   * @returns An ordered list of all weekday names, starting with Sunday.\n   */\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n\n  /**\n   * Gets the name for the year of the given date.\n   * @param date The date to get the year name for.\n   * @returns The name of the given year (e.g. '2017').\n   */\n  abstract getYearName(date: D): string;\n\n  /**\n   * Gets the first day of the week.\n   * @returns The first day of the week (0-indexed, 0 = Sunday).\n   */\n  abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Gets the number of days in the month of the given date.\n   * @param date The date whose month should be checked.\n   * @returns The number of days in the month of the given date.\n   */\n  abstract getNumDaysInMonth(date: D): number;\n\n  /**\n   * Clones the given date.\n   * @param date The date to clone\n   * @returns A new date equal to the given date.\n   */\n  abstract clone(date: D): D;\n\n  /**\n   * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n   * month and date.\n   * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n   * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n   * @param date The date of month of the date. Must be an integer 1 - length of the given month.\n   * @returns The new date, or null if invalid.\n   */\n  abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Gets today's date.\n   * @returns Today's date.\n   */\n  abstract today(): D;\n\n  /**\n   * Parses a date from a user-provided value.\n   * @param value The value to parse.\n   * @param parseFormat The expected format of the value being parsed\n   *     (type is implementation-dependent).\n   * @returns The parsed date.\n   */\n  abstract parse(value: any, parseFormat: any): D | null;\n\n  /**\n   * Formats a date as a string according to the given format.\n   * @param date The value to format.\n   * @param displayFormat The format to use to display the date as a string.\n   * @returns The formatted date string.\n   */\n  abstract format(date: D, displayFormat: any): string;\n\n  /**\n   * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n   * calendar for each year and then finding the closest date in the new month. For example when\n   * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n   * @param date The date to add years to.\n   * @param years The number of years to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of years added.\n   */\n  abstract addCalendarYears(date: D, years: number): D;\n\n  /**\n   * Adds the given number of months to the date. Months are counted as if flipping a page on the\n   * calendar for each month and then finding the closest date in the new month. For example when\n   * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n   * @param date The date to add months to.\n   * @param months The number of months to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of months added.\n   */\n  abstract addCalendarMonths(date: D, months: number): D;\n\n  /**\n   * Adds the given number of days to the date. Days are counted as if moving one cell on the\n   * calendar for each day.\n   * @param date The date to add days to.\n   * @param days The number of days to add (may be negative).\n   * @returns A new date equal to the given one with the specified number of days added.\n   */\n  abstract addCalendarDays(date: D, days: number): D;\n\n  /**\n   * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n   * This method is used to generate date strings that are compatible with native HTML attributes\n   * such as the `min` or `max` attribute of an `<input>`.\n   * @param date The date to get the ISO date string for.\n   * @returns The ISO date string date string.\n   */\n  abstract toIso8601(date: D): string;\n\n  /**\n   * Checks whether the given object is considered a date instance by this DateAdapter.\n   * @param obj The object to check\n   * @returns Whether the object is a date instance.\n   */\n  abstract isDateInstance(obj: any): boolean;\n\n  /**\n   * Checks whether the given date is valid.\n   * @param date The date to check.\n   * @returns Whether the date is valid.\n   */\n  abstract isValid(date: D): boolean;\n\n  /**\n   * Gets date instance that is not valid.\n   * @returns An invalid date.\n   */\n  abstract invalid(): D;\n\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value: any): D | null {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale: any) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first: D, second: D): number {\n    return this.getYear(first) - this.getYear(second) ||\n        this.getMonth(first) - this.getMonth(second) ||\n        this.getDate(first) - this.getDate(second);\n  }\n\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first: D | null, second: D | null): boolean {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n\nexport type MatDateFormats = {\n  parse: {\n    dateInput: any\n  },\n  display: {\n    dateInput: any,\n    monthYearLabel: any,\n    dateA11yLabel: any,\n    monthYearA11yLabel: any,\n  }\n};\n\n\nexport const MAT_DATE_FORMATS = new InjectionToken<MatDateFormats>('mat-date-formats');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {Inject, Injectable, Optional} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE} from './date-adapter';\n\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/** Whether the browser supports the Intl API. */\nlet SUPPORTS_INTL_API: boolean;\n\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/material2/issues/15687\ntry {\n  SUPPORTS_INTL_API = typeof Intl != 'undefined';\n} catch {\n  SUPPORTS_INTL_API = false;\n}\n\n/** The default month names to use if Intl API is not available. */\nconst DEFAULT_MONTH_NAMES = {\n  'long': [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n    'October', 'November', 'December'\n  ],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n\n\n/** The default date names to use if Intl API is not available. */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n\n\n/** The default day of the week names to use if Intl API is not available. */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX =\n    /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n@Injectable()\nexport class NativeDateAdapter extends DateAdapter<Date> {\n  /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\n  private readonly _clampDate: boolean;\n\n  /**\n   * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n   * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n   * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n   * will produce `'8/13/1800'`.\n   *\n   * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n   * getting the string representation of a Date object from it's utc representation. We're keeping\n   * it here for sometime, just for precaution, in case we decide to revert some of these changes\n   * though.\n   */\n  useUtcForDisplay: boolean = true;\n\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string, platform: Platform) {\n    super();\n    super.setLocale(matDateLocale);\n\n    // IE does its own time zone correction, so we disable this on IE.\n    this.useUtcForDisplay = !platform.TRIDENT;\n    this._clampDate = platform.TRIDENT || platform.EDGE;\n  }\n\n  getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {month: style, timeZone: 'utc'});\n      return range(12, i =>\n          this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n\n  getDateNames(): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric', timeZone: 'utc'});\n      return range(31, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {weekday: style, timeZone: 'utc'});\n      return range(7, i => this._stripDirectionalityCharacters(\n          this._format(dtf, new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n\n  getYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric', timeZone: 'utc'});\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return String(this.getYear(date));\n  }\n\n  getFirstDayOfWeek(): number {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n\n  getNumDaysInMonth(date: Date): number {\n    return this.getDate(this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n\n  clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  createDate(year: number, month: number, date: number): Date {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today(): Date {\n    return new Date();\n  }\n\n  parse(value: any): Date | null {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n\n  format(date: Date, displayFormat: Object): string {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n\n    if (SUPPORTS_INTL_API) {\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n        date = this.clone(date);\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n      }\n\n      displayFormat = {...displayFormat, timeZone: 'utc'};\n\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    let newDate = this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n\n  toIso8601(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value: any): Date | null {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj: any) {\n    return obj instanceof Date;\n  }\n\n  isValid(date: Date) {\n    return !isNaN(date.getTime());\n  }\n\n  invalid(): Date {\n    return new Date(NaN);\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  private _createDateWithOverflow(year: number, month: number, date: number) {\n    const result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  private _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param str The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n  private _stripDirectionalityCharacters(str: string) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\n\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  private _format(dtf: Intl.DateTimeFormat, date: Date) {\n    const d = new Date(Date.UTC(\n        date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\n        date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n    return dtf.format(d);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MatDateFormats} from './date-formats';\n\n\nexport const MAT_NATIVE_DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n    monthYearLabel: {year: 'numeric', month: 'short'},\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\n  }\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {NgModule} from '@angular/core';\nimport {DateAdapter} from './date-adapter';\nimport {MAT_DATE_FORMATS} from './date-formats';\nimport {NativeDateAdapter} from './native-date-adapter';\nimport {MAT_NATIVE_DATE_FORMATS} from './native-date-formats';\n\nexport * from './date-adapter';\nexport * from './date-formats';\nexport * from './native-date-adapter';\nexport * from './native-date-formats';\n\n\n@NgModule({\n  imports: [PlatformModule],\n  providers: [\n    {provide: DateAdapter, useClass: NativeDateAdapter},\n  ],\n})\nexport class NativeDateModule {}\n\n\n@NgModule({\n  imports: [NativeDateModule],\n  providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS}],\n})\nexport class MatNativeDateModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {FormGroupDirective, NgForm, FormControl} from '@angular/forms';\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n  }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({providedIn: 'root'})\nexport class ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, InjectionToken, Inject, Optional} from '@angular/core';\nimport {HammerGestureConfig} from '@angular/platform-browser';\nimport {MatCommonModule} from '../common-behaviors/common-module';\nimport {\n  HammerStatic,\n  HammerInstance,\n  Recognizer,\n  RecognizerStatic,\n  HammerOptions,\n} from './gesture-annotations';\n\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n */\nexport const MAT_HAMMER_OPTIONS = new InjectionToken<HammerOptions>('MAT_HAMMER_OPTIONS');\n\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n  'longpress',\n  'slide',\n  'slidestart',\n  'slideend',\n  'slideright',\n  'slideleft'\n];\n\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n */\nconst noopHammerInstance: HammerInstance = {\n  on: () => {},\n  off: () => {},\n};\n\n/** Adjusts configuration of our gesture library, Hammer. */\n@Injectable()\nexport class GestureConfig extends HammerGestureConfig {\n  /** List of new event names to add to the gesture support list */\n  events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n\n  constructor(\n    @Optional() @Inject(MAT_HAMMER_OPTIONS) private _hammerOptions?: HammerOptions,\n    @Optional() commonModule?: MatCommonModule) {\n    super();\n    if (commonModule) {\n      commonModule._checkHammerIsAvailable();\n    }\n  }\n\n  /**\n   * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n   *\n   * Our gesture names come from the Material Design gestures spec:\n   * https://material.io/design/#gestures-touch-mechanics\n   *\n   * More information on default recognizers can be found in Hammer docs:\n   * http://hammerjs.github.io/recognizer-pan/\n   * http://hammerjs.github.io/recognizer-press/\n   *\n   * @param element Element to which to assign the new HammerJS gestures.\n   * @returns Newly-created HammerJS instance.\n   */\n  buildHammer(element: HTMLElement): HammerInstance {\n    const hammer: HammerStatic = typeof window !== 'undefined' ? (window as any).Hammer : null;\n\n    if (!hammer) {\n      // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n      // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n      // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n      // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n      // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n      // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n      // undefined).\n      // @breaking-change 8.0.0\n      return noopHammerInstance;\n    }\n\n    const mc = new hammer(element, this._hammerOptions || undefined);\n\n    // Default Hammer Recognizers.\n    const pan = new hammer.Pan();\n    const swipe = new hammer.Swipe();\n    const press = new hammer.Press();\n\n    // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n    // Otherwise the previous `recognizeWith` will be dropped.\n    // TODO: Confirm threshold numbers with Material Design UX Team\n    const slide = this._createRecognizer(pan, {event: 'slide', threshold: 0}, swipe);\n    const longpress = this._createRecognizer(press, {event: 'longpress', time: 500});\n\n    // Overwrite the default `pan` event to use the swipe event.\n    pan.recognizeWith(swipe);\n\n    // Since the slide event threshold is set to zero, the slide recognizer can fire and\n    // accidentally reset the longpress recognizer. In order to make sure that the two\n    // recognizers can run simultaneously but don't affect each other, we allow the slide\n    // recognizer to recognize while a longpress is being processed.\n    // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n    longpress.recognizeWith(slide);\n\n    // Add customized gestures to Hammer manager\n    mc.add([swipe, press, pan, slide, longpress]);\n\n    return mc as HammerInstance;\n  }\n\n  /** Creates a new recognizer, without affecting the default recognizers of HammerJS */\n  private _createRecognizer(base: Recognizer, options: any, ...inheritances: Recognizer[]) {\n    let recognizer = new (base.constructor as RecognizerStatic)(options);\n\n    inheritances.push(base);\n    inheritances.forEach(item => recognizer.recognizeWith(item));\n\n    return recognizer;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  NgModule,\n  Directive,\n  ElementRef,\n  QueryList,\n} from '@angular/core';\nimport {startWith} from 'rxjs/operators';\nimport {MatCommonModule} from '../common-behaviors/common-module';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n  selector: '[mat-line], [matLine]',\n  host: {'class': 'mat-line'}\n})\nexport class MatLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport function setLines(lines: QueryList<MatLine>, element: ElementRef<HTMLElement>) {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith<QueryList<MatLine>>(lines)).subscribe(({length}) => {\n    setClass(element, 'mat-2-line', false);\n    setClass(element, 'mat-3-line', false);\n    setClass(element, 'mat-multi-line', false);\n\n    if (length === 2 || length === 3) {\n      setClass(element, `mat-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `mat-multi-line`, true);\n    }\n  });\n}\n\n/** Adds or removes a class from an element. */\nfunction setClass(element: ElementRef<HTMLElement>, className: string, isAdd: boolean): void {\n  const classList = element.nativeElement.classList;\n  isAdd ? classList.add(className) : classList.remove(className);\n}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n * @deprecated Use `setLines` instead.\n * @breaking-change 8.0.0\n */\nexport class MatLineSetter {\n  constructor(lines: QueryList<MatLine>, element: ElementRef<HTMLElement>) {\n    setLines(lines, element);\n  }\n}\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [MatLine, MatCommonModule],\n  declarations: [MatLine],\n})\nexport class MatLineModule { }\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\n\n/** Possible states for a ripple element. */\nexport enum RippleState {\n  FADING_IN, VISIBLE, FADING_OUT, HIDDEN\n}\n\n/**\n * Reference to a previously launched ripple element.\n */\nexport class RippleRef {\n\n  /** Current state of the ripple. */\n  state: RippleState = RippleState.HIDDEN;\n\n  constructor(\n    private _renderer: RippleRenderer,\n    /** Reference to the ripple HTML element. */\n    public element: HTMLElement,\n    /** Ripple configuration used for the ripple. */\n    public config: RippleConfig) {\n  }\n\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, NgZone} from '@angular/core';\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\nimport {RippleRef, RippleState} from './ripple-ref';\n\nexport type RippleConfig = {\n  color?: string;\n  centered?: boolean;\n  radius?: number;\n  persistent?: boolean;\n  animation?: RippleAnimationConfig;\n  terminateOnPointerUp?: boolean;\n};\n\n/**\n * Interface that describes the configuration for the animation of a ripple.\n * There are two animation phases with different durations for the ripples.\n */\nexport interface RippleAnimationConfig {\n  /** Duration in milliseconds for the enter animation (expansion from point of contact). */\n  enterDuration?: number;\n  /** Duration in milliseconds for the exit animation (fade-out). */\n  exitDuration?: number;\n}\n\n/**\n * Interface that describes the target for launching ripples.\n * It defines the ripple configuration and disabled state for interaction ripples.\n * @docs-private\n */\nexport interface RippleTarget {\n  /** Configuration for ripples that are launched on pointer down. */\n  rippleConfig: RippleConfig;\n  /** Whether ripples on pointer down should be disabled. */\n  rippleDisabled: boolean;\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nexport const defaultRippleAnimationConfig = {\n  enterDuration: 450,\n  exitDuration: 400\n};\n\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({passive: true});\n\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nexport class RippleRenderer {\n  /** Element where the ripples are being added to. */\n  private _containerElement: HTMLElement;\n\n  /** Element which triggers the ripple elements on mouse events. */\n  private _triggerElement: HTMLElement | null;\n\n  /** Whether the pointer is currently down or not. */\n  private _isPointerDown = false;\n\n  /** Events to be registered on the trigger element. */\n  private _triggerEvents = new Map<string, any>();\n\n  /** Set of currently active ripple references. */\n  private _activeRipples = new Set<RippleRef>();\n\n  /** Latest non-persistent ripple that was triggered. */\n  private _mostRecentTransientRipple: RippleRef | null;\n\n  /** Time in milliseconds when the last touchstart event happened. */\n  private _lastTouchStartEvent: number;\n\n  /**\n   * Cached dimensions of the ripple container. Set when the first\n   * ripple is shown and cleared once no more ripples are visible.\n   */\n  private _containerRect: ClientRect | null;\n\n  constructor(private _target: RippleTarget,\n              private _ngZone: NgZone,\n              elementRef: ElementRef<HTMLElement>,\n              platform: Platform) {\n\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = elementRef.nativeElement;\n\n      // Specify events which need to be registered on the trigger.\n      this._triggerEvents\n        .set('mousedown', this.onMousedown)\n        .set('mouseup', this.onPointerUp)\n        .set('mouseleave', this.onPointerUp)\n\n        .set('touchstart', this.onTouchStart)\n        .set('touchend', this.onPointerUp)\n        .set('touchcancel', this.onPointerUp);\n    }\n  }\n\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n  fadeInRipple(x: number, y: number, config: RippleConfig = {}): RippleRef {\n    const containerRect = this._containerRect =\n                          this._containerRect || this._containerElement.getBoundingClientRect();\n    const animationConfig = {...defaultRippleAnimationConfig, ...config.animation};\n\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const duration = animationConfig.enterDuration;\n\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n\n    // If the color is not set, the default CSS color will be used.\n    ripple.style.backgroundColor = config.color || null;\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this._containerElement.appendChild(ripple);\n\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n\n    ripple.style.transform = 'scale(1)';\n\n    // Exposed reference to the ripple that will be returned.\n    const rippleRef = new RippleRef(this, ripple, config);\n\n    rippleRef.state = RippleState.FADING_IN;\n\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this.runTimeoutOutsideZone(() => {\n      const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n\n      rippleRef.state = RippleState.VISIBLE;\n\n      // When the timer runs out while the user has kept their pointer down, we want to\n      // keep only the persistent ripples and the latest transient ripple. We do this,\n      // because we don't want stacked transient ripples to appear after their enter\n      // animation has finished.\n      if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n\n    return rippleRef;\n  }\n\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef: RippleRef) {\n    const wasActive = this._activeRipples.delete(rippleRef);\n\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n\n    // Clear out the cached bounding rect if we have no more ripples.\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    }\n\n    // For ripples that are not active anymore, don't re-run the fade-out animation.\n    if (!wasActive) {\n      return;\n    }\n\n    const rippleEl = rippleRef.element;\n    const animationConfig = {...defaultRippleAnimationConfig, ...rippleRef.config.animation};\n\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = RippleState.FADING_OUT;\n\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.HIDDEN;\n      rippleEl.parentNode!.removeChild(rippleEl);\n    }, animationConfig.exitDuration);\n  }\n\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n\n  /** Sets up the trigger event listeners */\n  setupTriggerEvents(element: HTMLElement) {\n    if (!element || element === this._triggerElement) {\n      return;\n    }\n\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n\n    this._ngZone.runOutsideAngular(() => {\n      this._triggerEvents.forEach((fn, type) => {\n        element.addEventListener(type, fn, passiveEventOptions);\n      });\n    });\n\n    this._triggerElement = element;\n  }\n\n  /** Function being called whenever the trigger is being pressed using mouse. */\n  private onMousedown = (event: MouseEvent) => {\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\n    // ripple in this case for consistency with the non-screen-reader experience.\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n    const isSyntheticEvent = this._lastTouchStartEvent &&\n        Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n\n    if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n    }\n  }\n\n  /** Function being called whenever the trigger is being pressed using touch. */\n  private onTouchStart = (event: TouchEvent) => {\n    if (!this._target.rippleDisabled) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true;\n\n      // Use `changedTouches` so we skip any touches where the user put\n      // their finger down, but used another finger to tap the element again.\n      const touches = event.changedTouches;\n\n      for (let i = 0; i < touches.length; i++) {\n        this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n      }\n    }\n  }\n\n  /** Function being called whenever the trigger is being released. */\n  private onPointerUp = () => {\n    if (!this._isPointerDown) {\n      return;\n    }\n\n    this._isPointerDown = false;\n\n    // Fade-out all ripples that are visible and not persistent.\n    this._activeRipples.forEach(ripple => {\n      // By default, only ripples that are completely visible will fade out on pointer release.\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n      const isVisible = ripple.state === RippleState.VISIBLE ||\n        ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n\n      if (!ripple.config.persistent && isVisible) {\n        ripple.fadeOut();\n      }\n    });\n  }\n\n  /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n  private runTimeoutOutsideZone(fn: Function, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n\n  /** Removes previously registered event listeners from the trigger element. */\n  _removeTriggerEvents() {\n    if (this._triggerElement) {\n      this._triggerEvents.forEach((fn, type) => {\n        this._triggerElement!.removeEventListener(type, fn, passiveEventOptions);\n      });\n    }\n  }\n}\n\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element: HTMLElement) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {RippleRef} from './ripple-ref';\nimport {RippleAnimationConfig, RippleConfig, RippleRenderer, RippleTarget} from './ripple-renderer';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n/** Configurable options for `matRipple`. */\nexport interface RippleGlobalOptions {\n  /**\n   * Whether ripples should be disabled. Ripples can be still launched manually by using\n   * the `launch()` method. Therefore focus indicators will still show up.\n   */\n  disabled?: boolean;\n\n  /**\n   * Configuration for the animation duration of the ripples. There are two phases with different\n   * durations for the ripples. The animation durations will be overwritten if the\n   * `NoopAnimationsModule` is being used.\n   */\n  animation?: RippleAnimationConfig;\n\n  /**\n   * Whether ripples should start fading out immediately after the mouse our touch is released. By\n   * default, ripples will wait for the enter animation to complete and for mouse or touch release.\n   */\n  terminateOnPointerUp?: boolean;\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nexport const MAT_RIPPLE_GLOBAL_OPTIONS =\n    new InjectionToken<RippleGlobalOptions>('mat-ripple-global-options');\n\n@Directive({\n  selector: '[mat-ripple], [matRipple]',\n  exportAs: 'matRipple',\n  host: {\n    'class': 'mat-ripple',\n    '[class.mat-ripple-unbounded]': 'unbounded'\n  }\n})\nexport class MatRipple implements OnInit, OnDestroy, RippleTarget {\n\n  /** Custom color for all ripples. */\n  @Input('matRippleColor') color: string;\n\n  /** Whether the ripples should be visible outside the component's bounds. */\n  @Input('matRippleUnbounded') unbounded: boolean;\n\n  /**\n   * Whether the ripple always originates from the center of the host element's bounds, rather\n   * than originating from the location of the click event.\n   */\n  @Input('matRippleCentered') centered: boolean;\n\n  /**\n   * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n   * will be the distance from the center of the ripple to the furthest corner of the host element's\n   * bounding rectangle.\n   */\n  @Input('matRippleRadius') radius: number = 0;\n\n  /**\n   * Configuration for the ripple animation. Allows modifying the enter and exit animation\n   * duration of the ripples. The animation durations will be overwritten if the\n   * `NoopAnimationsModule` is being used.\n   */\n  @Input('matRippleAnimation') animation: RippleAnimationConfig;\n\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n  @Input('matRippleDisabled')\n  get disabled() { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = value;\n    this._setupTriggerEventsIfEnabled();\n  }\n  private _disabled: boolean = false;\n\n  /**\n   * The element that triggers the ripple when click events are received.\n   * Defaults to the directive's host element.\n   */\n  @Input('matRippleTrigger')\n  get trigger() { return this._trigger || this._elementRef.nativeElement; }\n  set trigger(trigger: HTMLElement) {\n    this._trigger = trigger;\n    this._setupTriggerEventsIfEnabled();\n  }\n  private _trigger: HTMLElement;\n\n  /** Renderer for the ripple DOM manipulations. */\n  private _rippleRenderer: RippleRenderer;\n\n  /** Options that are set globally for all ripples. */\n  private _globalOptions: RippleGlobalOptions;\n\n  /** Whether ripple directive is initialized and the input bindings are set. */\n  private _isInitialized: boolean = false;\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              ngZone: NgZone,\n              platform: Platform,\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions?: RippleGlobalOptions,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n\n    if (animationMode === 'NoopAnimations') {\n      this._globalOptions.animation = {enterDuration: 0, exitDuration: 0};\n    }\n  }\n\n  ngOnInit() {\n    this._isInitialized = true;\n    this._setupTriggerEventsIfEnabled();\n  }\n\n  ngOnDestroy() {\n    this._rippleRenderer._removeTriggerEvents();\n  }\n\n  /** Fades out all currently showing ripple elements. */\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n\n  /**\n   * Ripple configuration from the directive's input values.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleConfig(): RippleConfig {\n    return {\n      centered: this.centered,\n      radius: this.radius,\n      color: this.color,\n      animation: {...this._globalOptions.animation, ...this.animation},\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n    };\n  }\n\n  /**\n   * Whether ripples on pointer-down are disabled or not.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || !!this._globalOptions.disabled;\n  }\n\n  /** Sets up the trigger event listeners if ripples are enabled. */\n  private _setupTriggerEventsIfEnabled() {\n    if (!this.disabled && this._isInitialized) {\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\n    }\n  }\n\n  /**\n   * Launches a manual ripple using the specified ripple configuration.\n   * @param config Configuration for the manual ripple.\n   */\n  launch(config: RippleConfig): RippleRef;\n\n  /**\n   * Launches a manual ripple at the specified coordinates within the element.\n   * @param x Coordinate within the element, along the X axis at which to fade-in the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to fade-in the ripple.\n   * @param config Optional ripple configuration for the manual ripple.\n   */\n  launch(x: number, y: number, config?: RippleConfig): RippleRef;\n\n  /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n  launch(configOrX: number | RippleConfig, y: number = 0, config?: RippleConfig): RippleRef {\n    if (typeof configOrX === 'number') {\n      return this._rippleRenderer.fadeInRipple(configOrX, y, {...this.rippleConfig, ...config});\n    } else {\n      return this._rippleRenderer.fadeInRipple(0, 0, {...this.rippleConfig, ...configOrX});\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {MatCommonModule} from '../common-behaviors/common-module';\nimport {MatRipple} from './ripple';\n\nexport * from './ripple';\nexport * from './ripple-ref';\nexport * from './ripple-renderer';\n\n@NgModule({\n  imports: [MatCommonModule, PlatformModule],\n  exports: [MatRipple, MatCommonModule],\n  declarations: [MatRipple],\n})\nexport class MatRippleModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  Input,\n  ChangeDetectionStrategy,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n/**\n * Possible states for a pseudo checkbox.\n * @docs-private\n */\nexport type MatPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'mat-pseudo-checkbox',\n  styleUrls: ['pseudo-checkbox.css'],\n  template: '',\n  host: {\n    'class': 'mat-pseudo-checkbox',\n    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  },\n})\nexport class MatPseudoCheckbox {\n  /** Display state of the checkbox. */\n  @Input() state: MatPseudoCheckboxState = 'unchecked';\n\n  /** Whether the checkbox is disabled. */\n  @Input() disabled: boolean = false;\n\n  constructor(@Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n  exports: [MatPseudoCheckbox],\n  declarations: [MatPseudoCheckbox]\n})\nexport class MatPseudoCheckboxModule { }\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '../common-behaviors/disabled';\n\n\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nexport class MatOptgroupBase { }\nexport const _MatOptgroupMixinBase: CanDisableCtor & typeof MatOptgroupBase =\n    mixinDisabled(MatOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mat-option`.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-optgroup',\n  exportAs: 'matOptgroup',\n  templateUrl: 'optgroup.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  styleUrls: ['optgroup.css'],\n  host: {\n    'class': 'mat-optgroup',\n    'role': 'group',\n    '[class.mat-optgroup-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-labelledby]': '_labelId',\n  }\n})\nexport class MatOptgroup extends _MatOptgroupMixinBase implements CanDisable {\n  /** Label for the option group. */\n  @Input() label: string;\n\n  /** Unique id for the underlying label. */\n  _labelId: string = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ENTER, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {MatOptgroup} from './optgroup';\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by MatOption when selected or deselected. */\nexport class MatOptionSelectionChange {\n  constructor(\n    /** Reference to the option that emitted the event. */\n    public source: MatOption,\n    /** Whether the change in the option's value was a result of a user action. */\n    public isUserInput = false) { }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface MatOptionParentComponent {\n  disableRipple?: boolean;\n  multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MAT_OPTION_PARENT_COMPONENT =\n    new InjectionToken<MatOptionParentComponent>('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-option',\n  exportAs: 'matOption',\n  host: {\n    'role': 'option',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[class.mat-selected]': 'selected',\n    '[class.mat-option-multiple]': 'multiple',\n    '[class.mat-active]': 'active',\n    '[id]': 'id',\n    '[attr.aria-selected]': '_getAriaSelected()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[class.mat-option-disabled]': 'disabled',\n    '(click)': '_selectViaInteraction()',\n    '(keydown)': '_handleKeydown($event)',\n    'class': 'mat-option',\n  },\n  styleUrls: ['option.css'],\n  templateUrl: 'option.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatOption implements AfterViewChecked, OnDestroy {\n  private _selected = false;\n  private _active = false;\n  private _disabled = false;\n  private _mostRecentViewValue = '';\n\n  /** Whether the wrapping component is in multiple selection mode. */\n  get multiple() { return this._parent && this._parent.multiple; }\n\n  /** Whether or not the option is currently selected. */\n  get selected(): boolean { return this._selected; }\n\n  /** The form value of the option. */\n  @Input() value: any;\n\n  /** The unique ID of the option. */\n  @Input() id: string = `mat-option-${_uniqueIdCounter++}`;\n\n  /** Whether the option is disabled. */\n  @Input()\n  get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n  set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n\n  /** Whether ripples for the option are disabled. */\n  get disableRipple() { return this._parent && this._parent.disableRipple; }\n\n  /** Event emitted when the option is selected or deselected. */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() readonly onSelectionChange = new EventEmitter<MatOptionSelectionChange>();\n\n  /** Emits when the state of the option changes and any parents have to be notified. */\n  readonly _stateChanges = new Subject<void>();\n\n  constructor(\n    private _element: ElementRef<HTMLElement>,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(MAT_OPTION_PARENT_COMPONENT) private _parent: MatOptionParentComponent,\n    @Optional() readonly group: MatOptgroup) {}\n\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active(): boolean {\n    return this._active;\n  }\n\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue(): string {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._getHostElement().textContent || '').trim();\n  }\n\n  /** Selects the option. */\n  select(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** Deselects the option. */\n  deselect(): void {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n\n  /** Sets focus onto this option. */\n  focus(): void {\n    const element = this._getHostElement();\n\n    if (typeof element.focus === 'function') {\n      element.focus();\n    }\n  }\n\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles(): void {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles(): void {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel(): string {\n    return this.viewValue;\n  }\n\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n      this._selectViaInteraction();\n\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n  _selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n\n  /**\n   * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n   * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n   * attributes adds a significant amount of noise to screen-reader users without providing useful\n   * information.\n   */\n  _getAriaSelected(): boolean|null {\n    return this.selected || (this.multiple ? false : null);\n  }\n\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Gets the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n        this._stateChanges.next();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  /** Emits the selection change event. */\n  private _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(optionIndex: number, options: QueryList<MatOption>,\n  optionGroups: QueryList<MatOptgroup>): number {\n\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n\n    return groupCounter;\n  }\n\n  return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(optionIndex: number, optionHeight: number,\n    currentScrollPosition: number, panelHeight: number): number {\n  const optionOffset = optionIndex * optionHeight;\n\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatRippleModule} from '../ripple/index';\nimport {MatPseudoCheckboxModule} from '../selection/index';\nimport {MatOption} from './option';\nimport {MatOptgroup} from './optgroup';\n\n\n@NgModule({\n  imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n  exports: [MatOption, MatOptgroup],\n  declarations: [MatOption, MatOptgroup]\n})\nexport class MatOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MAT_LABEL_GLOBAL_OPTIONS =\n  new InjectionToken<LabelOptions>('mat-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n  /**\n   * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n   * Default behavior is assumed to be `auto`.\n   */\n  float?: FloatLabelType;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * @docs-private\n * @breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n */\nexport const JAN = 0, FEB = 1, MAR = 2, APR = 3, MAY = 4, JUN = 5, JUL = 6, AUG = 7, SEP = 8,\n  OCT = 9, NOV = 10, DEC = 11;\n"]},"metadata":{},"sourceType":"module"}